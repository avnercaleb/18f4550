

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 19 19:56:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 23/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   000F94                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _UARTBUFF
    72   000F94  20                 	db	32
    73   000F95  20                 	db	32
    74   000F96  20                 	db	32
    75   000F97  20                 	db	32
    76   000F98  20                 	db	32
    77   000F99  20                 	db	32
    78   000F9A  20                 	db	32
    79   000F9B  20                 	db	32
    80   000F9C  20                 	db	32
    81   000F9D  20                 	db	32
    82   000F9E  20                 	db	32
    83   000F9F  20                 	db	32
    84   000FA0  20                 	db	32
    85   000FA1  20                 	db	32
    86   000FA2  20                 	db	32
    87   000FA3  20                 	db	32
    88   000FA4  00                 	db	0
    89                           
    90                           	psect	smallconst
    91   000800                     __psmallconst:
    92                           	callstack 0
    93   000800  00                 	db	0
    94   000801                     _modbusQuery:
    95                           	callstack 0
    96   000801  68                 	db	104
    97   000802  04                 	db	4
    98   000803  00                 	db	0
    99   000804  00                 	db	0
   100   000805  00                 	db	0
   101   000806  04                 	db	4
   102   000807  F8                 	db	248
   103   000808  F0                 	db	240
   104   000809                     __end_of_modbusQuery:
   105                           	callstack 0
   106   000000                     _EECON2	set	4007
   107   000000                     _EEDATA	set	4008
   108   000000                     _EEADR	set	4009
   109   000000                     _RCREG	set	4014
   110   000000                     _TXREG	set	4013
   111   000000                     _SPBRG	set	4015
   112   000000                     _SSPSTATbits	set	4039
   113   000000                     _TXSTAbits	set	4012
   114   000000                     _LATDbits	set	3980
   115   000000                     _TRISCbits	set	3988
   116   000000                     _TRISDbits	set	3989
   117   000000                     _PIE1bits	set	3997
   118   000000                     _INTCONbits	set	4082
   119   000000                     _EECON1bits	set	4006
   120   000000                     _RCSTAbits	set	4011
   121   000000                     _RCIF	set	31989
   122   000000                     _BRGH	set	32098
   123   000000                     _ADCON2bits	set	4032
   124   000000                     _ADCON1bits	set	4033
   125   000000                     _ADRES	set	4035
   126   000000                     _SSPCON1	set	4038
   127   000000                     _SSPSTAT	set	4039
   128   000000                     _ADCON0bits	set	4034
   129   000000                     _TRISAbits	set	3986
   130   000000                     _TRISBbits	set	3987
   131   000000                     _SSPBUF	set	4041
   132   000809                     STR_2:
   133   000809  42                 	db	66	;'B'
   134   00080A  65                 	db	101	;'e'
   135   00080B  6D                 	db	109	;'m'
   136   00080C  20                 	db	32
   137   00080D  56                 	db	86	;'V'
   138   00080E  69                 	db	105	;'i'
   139   00080F  6E                 	db	110	;'n'
   140   000810  64                 	db	100	;'d'
   141   000811  6F                 	db	111	;'o'
   142   000812  21                 	db	33
   143   000813  00                 	db	0
   144   000814                     STR_3:
   145   000814  50                 	db	80	;'P'
   146   000815  49                 	db	73	;'I'
   147   000816  43                 	db	67	;'C'
   148   000817  31                 	db	49	;'1'
   149   000818  38                 	db	56	;'8'
   150   000819  46                 	db	70	;'F'
   151   00081A  34                 	db	52	;'4'
   152   00081B  35                 	db	53	;'5'
   153   00081C  35                 	db	53	;'5'
   154   00081D  30                 	db	48	;'0'
   155   00081E  00                 	db	0
   156   00081F                     STR_1:
   157   00081F  30                 	db	48	;'0'
   158   000820  78                 	db	120	;'x'
   159   000821  30                 	db	48	;'0'
   160   000822  34                 	db	52	;'4'
   161   000823  00                 	db	0
   162   000824  00                 	db	0	; dummy byte at the end
   163   000000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167   000EBC                     __pcinit:
   168                           	callstack 0
   169   000EBC                     start_initialization:
   170                           	callstack 0
   171   000EBC                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (17 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176   000EBC  0E94               	movlw	low __pidataCOMRAM
   177   000EBE  6EF6               	movwf	tblptrl,c
   178   000EC0  0E0F               	movlw	high __pidataCOMRAM
   179   000EC2  6EF7               	movwf	tblptrh,c
   180   000EC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181   000EC6  6EF8               	movwf	tblptru,c
   182   000EC8  EE00  F028         	lfsr	0,__pdataCOMRAM
   183   000ECC  EE10 F011          	lfsr	1,17
   184   000ED0                     copy_data0:
   185   000ED0  0009               	tblrd		*+
   186   000ED2  CFF5 FFEE          	movff	tablat,postinc0
   187   000ED6  50E5               	movf	postdec1,w,c
   188   000ED8  50E1               	movf	fsr1l,w,c
   189   000EDA  E1FA               	bnz	copy_data0
   190   000EDC                     end_of_initialization:
   191                           	callstack 0
   192   000EDC                     __end_of__initialization:
   193                           	callstack 0
   194   000EDC  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   195   000EDE  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   196   000EE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197   000EE2  6EF8               	movwf	tblptru,c
   198   000EE4  0100               	movlb	0
   199   000EE6  EF8A  F007         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	dataCOMRAM
   202   000028                     __pdataCOMRAM:
   203                           	callstack 0
   204   000028                     _UARTBUFF:
   205                           	callstack 0
   206   000028                     	ds	17
   207                           
   208                           	psect	cstackCOMRAM
   209   000001                     __pcstackCOMRAM:
   210                           	callstack 0
   211   000001                     UART_Interrupt@temp:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x0
   215   000001                     	ds	1
   216   000002                     UART_Interrupt@i:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x1
   220   000002                     	ds	2
   221   000004                     ??_Interrupt:
   222                           
   223                           ; 1 bytes @ 0x3
   224   000004                     	ds	4
   225   000008                     ?___aldiv:
   226                           	callstack 0
   227   000008                     UART_Write@data:
   228                           	callstack 0
   229   000008                     delay_ms@milliseconds:
   230                           	callstack 0
   231   000008                     ADC_Init@channel:
   232                           	callstack 0
   233   000008                     ___aldiv@dividend:
   234                           	callstack 0
   235                           
   236                           ; 4 bytes @ 0x7
   237   000008                     	ds	1
   238   000009                     UART_Write_Text@txt:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x8
   242   000009                     	ds	1
   243   00000A                     ??_ADC_Init:
   244   00000A                     delay_ms@i:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x9
   248   00000A                     	ds	1
   249   00000B                     ??_UART_Write_Text:
   250                           
   251                           ; 1 bytes @ 0xA
   252   00000B                     	ds	1
   253   00000C                     delay_ms@j:
   254                           	callstack 0
   255   00000C                     ___aldiv@divisor:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0xB
   259   00000C                     	ds	1
   260   00000D                     UART_Write_Text@i:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xC
   264   00000D                     	ds	1
   265   00000E                     ??_LCD_Command:
   266   00000E                     ??_LCD_Char:
   267                           
   268                           ; 1 bytes @ 0xD
   269   00000E                     	ds	1
   270   00000F                     UART_Write_Text_ln@txt:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xE
   274   00000F                     	ds	1
   275   000010                     LCD_Command@cmd:
   276                           	callstack 0
   277   000010                     LCD_Char@dat:
   278                           	callstack 0
   279   000010                     ___aldiv@counter:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xF
   283   000010                     	ds	1
   284   000011                     ___aldiv@sign:
   285                           	callstack 0
   286   000011                     LCD_String@msg:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x10
   290   000011                     	ds	1
   291   000012                     ___aldiv@quotient:
   292                           	callstack 0
   293                           
   294                           ; 4 bytes @ 0x11
   295   000012                     	ds	1
   296   000013                     LCD_String_xy@pos:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x12
   300   000013                     	ds	1
   301   000014                     LCD_String_xy@msg:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x13
   305   000014                     	ds	2
   306   000016                     LCD_String_xy@row:
   307                           	callstack 0
   308   000016                     UART_Init@baudrate:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x15
   312   000016                     	ds	1
   313   000017                     LCD_String_xy@location:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x16
   317   000017                     	ds	3
   318   00001A                     ??_UART_Init:
   319                           
   320                           ; 1 bytes @ 0x19
   321   00001A                     	ds	8
   322   000022                     UART_Init@x:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x21
   326   000022                     	ds	2
   327   000024                     main@localAddr:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x23
   331   000024                     	ds	2
   332   000026                     main@FNSTAT:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x25
   336   000026                     	ds	2
   337                           
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 19 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  FNSTAT          2   37[COMRAM] short 
   348 ;;  localAddr       2   35[COMRAM] unsigned int 
   349 ;;  temp            1    0        unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         4       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         4       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        4 bytes
   364 ;; Hardware stack levels required when called: 7
   365 ;; This function calls:
   366 ;;		_UART_Write_Text_ln
   367 ;;		_setup
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text0
   374   000F14                     __ptext0:
   375                           	callstack 0
   376   000F14                     _main:
   377                           	callstack 24
   378   000F14                     
   379                           ;main.c: 21: unsigned int localAddr = 0;
   380   000F14  0E00               	movlw	0
   381   000F16  6E25               	movwf	(main@localAddr+1)^0,c
   382   000F18  0E00               	movlw	0
   383   000F1A  6E24               	movwf	main@localAddr^0,c
   384                           
   385                           ;main.c: 22: short FNSTAT = 0;
   386   000F1C  0E00               	movlw	0
   387   000F1E  6E27               	movwf	(main@FNSTAT+1)^0,c
   388   000F20  0E00               	movlw	0
   389   000F22  6E26               	movwf	main@FNSTAT^0,c
   390   000F24                     
   391                           ;main.c: 24: setup();
   392   000F24  ECD9  F006         	call	_setup	;wreg free
   393   000F28                     l1701:
   394                           
   395                           ;main.c: 27: UART_Write_Text_ln("0x04");
   396   000F28  0E1F               	movlw	low STR_1
   397   000F2A  6E0F               	movwf	UART_Write_Text_ln@txt^0,c
   398   000F2C  0E08               	movlw	high STR_1
   399   000F2E  6E10               	movwf	(UART_Write_Text_ln@txt+1)^0,c
   400   000F30  ECB2  F007         	call	_UART_Write_Text_ln	;wreg free
   401   000F34  EF94  F007         	goto	l1701
   402   000F38  EF07  F000         	goto	start
   403   000F3C                     __end_of_main:
   404                           	callstack 0
   405                           
   406 ;; *************** function _setup *****************
   407 ;; Defined at:
   408 ;;		line 13 in file "setup.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 6
   429 ;; This function calls:
   430 ;;		_ADC_Init
   431 ;;		_LCD_Init
   432 ;;		_LCD_String_xy
   433 ;;		_UART_Init
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440   000DB2                     __ptext1:
   441                           	callstack 0
   442   000DB2                     _setup:
   443                           	callstack 24
   444   000DB2                     
   445                           ;setup.c: 14: TRISDbits.RD0 = 0;
   446   000DB2  9095               	bcf	149,0,c	;volatile
   447   000DB4                     
   448                           ;setup.c: 15: UART_Init(9600);
   449   000DB4  0E80               	movlw	128
   450   000DB6  6E16               	movwf	UART_Init@baudrate^0,c
   451   000DB8  0E25               	movlw	37
   452   000DBA  6E17               	movwf	(UART_Init@baudrate+1)^0,c
   453   000DBC  0E00               	movlw	0
   454   000DBE  6E18               	movwf	(UART_Init@baudrate+2)^0,c
   455   000DC0  0E00               	movlw	0
   456   000DC2  6E19               	movwf	(UART_Init@baudrate+3)^0,c
   457   000DC4  EC13  F004         	call	_UART_Init	;wreg free
   458                           
   459                           ;setup.c: 16: ADC_Init(0);
   460   000DC8  0E00               	movlw	0
   461   000DCA  6E09               	movwf	(ADC_Init@channel+1)^0,c
   462   000DCC  0E00               	movlw	0
   463   000DCE  6E08               	movwf	ADC_Init@channel^0,c
   464   000DD0  EC9E  F007         	call	_ADC_Init	;wreg free
   465                           
   466                           ;setup.c: 17: LCD_Init();
   467   000DD4  EC27  F007         	call	_LCD_Init	;wreg free
   468   000DD8                     
   469                           ;setup.c: 19: LCD_String_xy(1, 5, "Bem Vindo!");
   470   000DD8  0E05               	movlw	5
   471   000DDA  6E13               	movwf	LCD_String_xy@pos^0,c
   472   000DDC  0E09               	movlw	low STR_2
   473   000DDE  6E14               	movwf	LCD_String_xy@msg^0,c
   474   000DE0  0E08               	movlw	high STR_2
   475   000DE2  6E15               	movwf	(LCD_String_xy@msg+1)^0,c
   476   000DE4  0E01               	movlw	1
   477   000DE6  EC43  F006         	call	_LCD_String_xy
   478   000DEA                     
   479                           ;setup.c: 20: LCD_String_xy(2, 5, "PIC18F4550");
   480   000DEA  0E05               	movlw	5
   481   000DEC  6E13               	movwf	LCD_String_xy@pos^0,c
   482   000DEE  0E14               	movlw	low STR_3
   483   000DF0  6E14               	movwf	LCD_String_xy@msg^0,c
   484   000DF2  0E08               	movlw	high STR_3
   485   000DF4  6E15               	movwf	(LCD_String_xy@msg+1)^0,c
   486   000DF6  0E02               	movlw	2
   487   000DF8  EC43  F006         	call	_LCD_String_xy
   488   000DFC                     
   489                           ;setup.c: 22: INTCONbits.GIE = 1;
   490   000DFC  8EF2               	bsf	242,7,c	;volatile
   491   000DFE                     
   492                           ;setup.c: 23: INTCONbits.PEIE = 1;
   493   000DFE  8CF2               	bsf	242,6,c	;volatile
   494   000E00                     
   495                           ;setup.c: 24: PIE1bits.RCIE = 1;
   496   000E00  8A9D               	bsf	157,5,c	;volatile
   497   000E02  0012               	return		;funcret
   498   000E04                     __end_of_setup:
   499                           	callstack 0
   500                           
   501 ;; *************** function _UART_Init *****************
   502 ;; Defined at:
   503 ;;		line 5 in file "uart.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  baudrate        4   21[COMRAM] long 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  x               2   33[COMRAM] unsigned int 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         4       0       0       0       0       0       0       0       0
   518 ;;      Locals:         2       0       0       0       0       0       0       0       0
   519 ;;      Temps:          8       0       0       0       0       0       0       0       0
   520 ;;      Totals:        14       0       0       0       0       0       0       0       0
   521 ;;Total ram usage:       14 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 3
   524 ;; This function calls:
   525 ;;		___aldiv
   526 ;; This function is called by:
   527 ;;		_setup
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text2
   532   000826                     __ptext2:
   533                           	callstack 0
   534   000826                     _UART_Init:
   535                           	callstack 26
   536   000826                     
   537                           ;uart.c: 7: unsigned int x;;uart.c: 8: x = (20000000 - baudrate * 64)/(baudrate * 64);
   538   000826  C016  F01A         	movff	UART_Init@baudrate,??_UART_Init
   539   00082A  C017  F01B         	movff	UART_Init@baudrate+1,??_UART_Init+1
   540   00082E  C018  F01C         	movff	UART_Init@baudrate+2,??_UART_Init+2
   541   000832  C019  F01D         	movff	UART_Init@baudrate+3,??_UART_Init+3
   542   000836  0E06               	movlw	6
   543   000838                     u665:
   544   000838  90D8               	bcf	status,0,c
   545   00083A  361A               	rlcf	??_UART_Init^0,f,c
   546   00083C  361B               	rlcf	(??_UART_Init+1)^0,f,c
   547   00083E  361C               	rlcf	(??_UART_Init+2)^0,f,c
   548   000840  361D               	rlcf	(??_UART_Init+3)^0,f,c
   549   000842  2EE8               	decfsz	wreg,f,c
   550   000844  EF1C  F004         	goto	u665
   551   000848  501A               	movf	??_UART_Init^0,w,c
   552   00084A  0800               	sublw	0
   553   00084C  6E08               	movwf	___aldiv@dividend^0,c
   554   00084E  0E2D               	movlw	45
   555   000850  541B               	subfwb	(??_UART_Init+1)^0,w,c
   556   000852  6E09               	movwf	(___aldiv@dividend+1)^0,c
   557   000854  0E31               	movlw	49
   558   000856  541C               	subfwb	(??_UART_Init+2)^0,w,c
   559   000858  6E0A               	movwf	(___aldiv@dividend+2)^0,c
   560   00085A  0E01               	movlw	1
   561   00085C  541D               	subfwb	(??_UART_Init+3)^0,w,c
   562   00085E  6E0B               	movwf	(___aldiv@dividend+3)^0,c
   563   000860  C016  F01E         	movff	UART_Init@baudrate,??_UART_Init+4
   564   000864  C017  F01F         	movff	UART_Init@baudrate+1,??_UART_Init+5
   565   000868  C018  F020         	movff	UART_Init@baudrate+2,??_UART_Init+6
   566   00086C  C019  F021         	movff	UART_Init@baudrate+3,??_UART_Init+7
   567   000870  0E06               	movlw	6
   568   000872                     u675:
   569   000872  90D8               	bcf	status,0,c
   570   000874  361E               	rlcf	(??_UART_Init+4)^0,f,c
   571   000876  361F               	rlcf	(??_UART_Init+5)^0,f,c
   572   000878  3620               	rlcf	(??_UART_Init+6)^0,f,c
   573   00087A  3621               	rlcf	(??_UART_Init+7)^0,f,c
   574   00087C  2EE8               	decfsz	wreg,f,c
   575   00087E  EF39  F004         	goto	u675
   576   000882  C01E  F00C         	movff	??_UART_Init+4,___aldiv@divisor
   577   000886  C01F  F00D         	movff	??_UART_Init+5,___aldiv@divisor+1
   578   00088A  C020  F00E         	movff	??_UART_Init+6,___aldiv@divisor+2
   579   00088E  C021  F00F         	movff	??_UART_Init+7,___aldiv@divisor+3
   580   000892  ECBD  F005         	call	___aldiv	;wreg free
   581   000896  C008  F022         	movff	?___aldiv,UART_Init@x
   582   00089A  C009  F023         	movff	?___aldiv+1,UART_Init@x+1
   583   00089E                     
   584                           ;uart.c: 10: if(x > 255) {
   585   00089E  0423               	decf	(UART_Init@x+1)^0,w,c
   586   0008A0  A0D8               	btfss	status,0,c
   587   0008A2  EF55  F004         	goto	u681
   588   0008A6  EF57  F004         	goto	u680
   589   0008AA                     u681:
   590   0008AA  EF94  F004         	goto	l1627
   591   0008AE                     u680:
   592   0008AE                     
   593                           ;uart.c: 11: x = (20000000 - baudrate * 16)/(baudrate * 16);
   594   0008AE  C016  F01A         	movff	UART_Init@baudrate,??_UART_Init
   595   0008B2  C017  F01B         	movff	UART_Init@baudrate+1,??_UART_Init+1
   596   0008B6  C018  F01C         	movff	UART_Init@baudrate+2,??_UART_Init+2
   597   0008BA  C019  F01D         	movff	UART_Init@baudrate+3,??_UART_Init+3
   598   0008BE  0E04               	movlw	4
   599   0008C0                     u695:
   600   0008C0  90D8               	bcf	status,0,c
   601   0008C2  361A               	rlcf	??_UART_Init^0,f,c
   602   0008C4  361B               	rlcf	(??_UART_Init+1)^0,f,c
   603   0008C6  361C               	rlcf	(??_UART_Init+2)^0,f,c
   604   0008C8  361D               	rlcf	(??_UART_Init+3)^0,f,c
   605   0008CA  2EE8               	decfsz	wreg,f,c
   606   0008CC  EF60  F004         	goto	u695
   607   0008D0  501A               	movf	??_UART_Init^0,w,c
   608   0008D2  0800               	sublw	0
   609   0008D4  6E08               	movwf	___aldiv@dividend^0,c
   610   0008D6  0E2D               	movlw	45
   611   0008D8  541B               	subfwb	(??_UART_Init+1)^0,w,c
   612   0008DA  6E09               	movwf	(___aldiv@dividend+1)^0,c
   613   0008DC  0E31               	movlw	49
   614   0008DE  541C               	subfwb	(??_UART_Init+2)^0,w,c
   615   0008E0  6E0A               	movwf	(___aldiv@dividend+2)^0,c
   616   0008E2  0E01               	movlw	1
   617   0008E4  541D               	subfwb	(??_UART_Init+3)^0,w,c
   618   0008E6  6E0B               	movwf	(___aldiv@dividend+3)^0,c
   619   0008E8  C016  F01E         	movff	UART_Init@baudrate,??_UART_Init+4
   620   0008EC  C017  F01F         	movff	UART_Init@baudrate+1,??_UART_Init+5
   621   0008F0  C018  F020         	movff	UART_Init@baudrate+2,??_UART_Init+6
   622   0008F4  C019  F021         	movff	UART_Init@baudrate+3,??_UART_Init+7
   623   0008F8  0E04               	movlw	4
   624   0008FA                     u705:
   625   0008FA  90D8               	bcf	status,0,c
   626   0008FC  361E               	rlcf	(??_UART_Init+4)^0,f,c
   627   0008FE  361F               	rlcf	(??_UART_Init+5)^0,f,c
   628   000900  3620               	rlcf	(??_UART_Init+6)^0,f,c
   629   000902  3621               	rlcf	(??_UART_Init+7)^0,f,c
   630   000904  2EE8               	decfsz	wreg,f,c
   631   000906  EF7D  F004         	goto	u705
   632   00090A  C01E  F00C         	movff	??_UART_Init+4,___aldiv@divisor
   633   00090E  C01F  F00D         	movff	??_UART_Init+5,___aldiv@divisor+1
   634   000912  C020  F00E         	movff	??_UART_Init+6,___aldiv@divisor+2
   635   000916  C021  F00F         	movff	??_UART_Init+7,___aldiv@divisor+3
   636   00091A  ECBD  F005         	call	___aldiv	;wreg free
   637   00091E  C008  F022         	movff	?___aldiv,UART_Init@x
   638   000922  C009  F023         	movff	?___aldiv+1,UART_Init@x+1
   639   000926                     
   640                           ;uart.c: 12: BRGH = 1;
   641   000926  84AC               	bsf	4012,2,c	;volatile
   642   000928                     l1627:
   643                           
   644                           ;uart.c: 13: };uart.c: 15: if(x < 256) {
   645   000928  0423               	decf	(UART_Init@x+1)^0,w,c
   646   00092A  B0D8               	btfsc	status,0,c
   647   00092C  EF9A  F004         	goto	u711
   648   000930  EF9C  F004         	goto	u710
   649   000934                     u711:
   650   000934  EFA4  F004         	goto	l78
   651   000938                     u710:
   652   000938                     
   653                           ;uart.c: 16: TRISCbits.TRISC6 = 1;
   654   000938  8C94               	bsf	148,6,c	;volatile
   655                           
   656                           ;uart.c: 17: TRISCbits.TRISC7 = 1;
   657   00093A  8E94               	bsf	148,7,c	;volatile
   658                           
   659                           ;uart.c: 19: SPBRG = x;
   660   00093C  C022  FFAF         	movff	UART_Init@x,4015	;volatile
   661                           
   662                           ;uart.c: 21: TXSTAbits.SYNC = 0;
   663   000940  98AC               	bcf	172,4,c	;volatile
   664                           
   665                           ;uart.c: 22: RCSTAbits.SPEN = 1;
   666   000942  8EAB               	bsf	171,7,c	;volatile
   667                           
   668                           ;uart.c: 23: TXSTAbits.TXEN = 1;
   669   000944  8AAC               	bsf	172,5,c	;volatile
   670                           
   671                           ;uart.c: 24: RCSTAbits.CREN = 1;
   672   000946  88AB               	bsf	171,4,c	;volatile
   673   000948                     l78:
   674   000948  0012               	return		;funcret
   675   00094A                     __end_of_UART_Init:
   676                           	callstack 0
   677                           
   678 ;; *************** function ___aldiv *****************
   679 ;; Defined at:
   680 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  dividend        4    7[COMRAM] long 
   683 ;;  divisor         4   11[COMRAM] long 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  quotient        4   17[COMRAM] long 
   686 ;;  sign            1   16[COMRAM] unsigned char 
   687 ;;  counter         1   15[COMRAM] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  4    7[COMRAM] long 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   697 ;;      Params:         8       0       0       0       0       0       0       0       0
   698 ;;      Locals:         6       0       0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0
   700 ;;      Totals:        14       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:       14 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 2
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_UART_Init
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text3
   712   000B7A                     __ptext3:
   713                           	callstack 0
   714   000B7A                     ___aldiv:
   715                           	callstack 26
   716   000B7A  0E00               	movlw	0
   717   000B7C  6E11               	movwf	___aldiv@sign^0,c
   718   000B7E  BE0F               	btfsc	(___aldiv@divisor+3)^0,7,c
   719   000B80  EFC6  F005         	goto	u600
   720   000B84  EFC4  F005         	goto	u601
   721   000B88                     u601:
   722   000B88  EFD0  F005         	goto	l1583
   723   000B8C                     u600:
   724   000B8C  1E0F               	comf	(___aldiv@divisor+3)^0,f,c
   725   000B8E  1E0E               	comf	(___aldiv@divisor+2)^0,f,c
   726   000B90  1E0D               	comf	(___aldiv@divisor+1)^0,f,c
   727   000B92  6C0C               	negf	___aldiv@divisor^0,c
   728   000B94  0E00               	movlw	0
   729   000B96  220D               	addwfc	(___aldiv@divisor+1)^0,f,c
   730   000B98  220E               	addwfc	(___aldiv@divisor+2)^0,f,c
   731   000B9A  220F               	addwfc	(___aldiv@divisor+3)^0,f,c
   732   000B9C  0E01               	movlw	1
   733   000B9E  6E11               	movwf	___aldiv@sign^0,c
   734   000BA0                     l1583:
   735   000BA0  BE0B               	btfsc	(___aldiv@dividend+3)^0,7,c
   736   000BA2  EFD7  F005         	goto	u610
   737   000BA6  EFD5  F005         	goto	u611
   738   000BAA                     u611:
   739   000BAA  EFE1  F005         	goto	l1589
   740   000BAE                     u610:
   741   000BAE  1E0B               	comf	(___aldiv@dividend+3)^0,f,c
   742   000BB0  1E0A               	comf	(___aldiv@dividend+2)^0,f,c
   743   000BB2  1E09               	comf	(___aldiv@dividend+1)^0,f,c
   744   000BB4  6C08               	negf	___aldiv@dividend^0,c
   745   000BB6  0E00               	movlw	0
   746   000BB8  2209               	addwfc	(___aldiv@dividend+1)^0,f,c
   747   000BBA  220A               	addwfc	(___aldiv@dividend+2)^0,f,c
   748   000BBC  220B               	addwfc	(___aldiv@dividend+3)^0,f,c
   749   000BBE  0E01               	movlw	1
   750   000BC0  1A11               	xorwf	___aldiv@sign^0,f,c
   751   000BC2                     l1589:
   752   000BC2  0E00               	movlw	0
   753   000BC4  6E12               	movwf	___aldiv@quotient^0,c
   754   000BC6  0E00               	movlw	0
   755   000BC8  6E13               	movwf	(___aldiv@quotient+1)^0,c
   756   000BCA  0E00               	movlw	0
   757   000BCC  6E14               	movwf	(___aldiv@quotient+2)^0,c
   758   000BCE  0E00               	movlw	0
   759   000BD0  6E15               	movwf	(___aldiv@quotient+3)^0,c
   760   000BD2  500C               	movf	___aldiv@divisor^0,w,c
   761   000BD4  100D               	iorwf	(___aldiv@divisor+1)^0,w,c
   762   000BD6  100E               	iorwf	(___aldiv@divisor+2)^0,w,c
   763   000BD8  100F               	iorwf	(___aldiv@divisor+3)^0,w,c
   764   000BDA  B4D8               	btfsc	status,2,c
   765   000BDC  EFF2  F005         	goto	u621
   766   000BE0  EFF4  F005         	goto	u620
   767   000BE4                     u621:
   768   000BE4  EF2A  F006         	goto	l1611
   769   000BE8                     u620:
   770   000BE8  0E01               	movlw	1
   771   000BEA  6E10               	movwf	___aldiv@counter^0,c
   772   000BEC  EFFE  F005         	goto	l1597
   773   000BF0                     l1595:
   774   000BF0  90D8               	bcf	status,0,c
   775   000BF2  360C               	rlcf	___aldiv@divisor^0,f,c
   776   000BF4  360D               	rlcf	(___aldiv@divisor+1)^0,f,c
   777   000BF6  360E               	rlcf	(___aldiv@divisor+2)^0,f,c
   778   000BF8  360F               	rlcf	(___aldiv@divisor+3)^0,f,c
   779   000BFA  2A10               	incf	___aldiv@counter^0,f,c
   780   000BFC                     l1597:
   781   000BFC  AE0F               	btfss	(___aldiv@divisor+3)^0,7,c
   782   000BFE  EF03  F006         	goto	u631
   783   000C02  EF05  F006         	goto	u630
   784   000C06                     u631:
   785   000C06  EFF8  F005         	goto	l1595
   786   000C0A                     u630:
   787   000C0A                     l1599:
   788   000C0A  90D8               	bcf	status,0,c
   789   000C0C  3612               	rlcf	___aldiv@quotient^0,f,c
   790   000C0E  3613               	rlcf	(___aldiv@quotient+1)^0,f,c
   791   000C10  3614               	rlcf	(___aldiv@quotient+2)^0,f,c
   792   000C12  3615               	rlcf	(___aldiv@quotient+3)^0,f,c
   793   000C14  500C               	movf	___aldiv@divisor^0,w,c
   794   000C16  5C08               	subwf	___aldiv@dividend^0,w,c
   795   000C18  500D               	movf	(___aldiv@divisor+1)^0,w,c
   796   000C1A  5809               	subwfb	(___aldiv@dividend+1)^0,w,c
   797   000C1C  500E               	movf	(___aldiv@divisor+2)^0,w,c
   798   000C1E  580A               	subwfb	(___aldiv@dividend+2)^0,w,c
   799   000C20  500F               	movf	(___aldiv@divisor+3)^0,w,c
   800   000C22  580B               	subwfb	(___aldiv@dividend+3)^0,w,c
   801   000C24  A0D8               	btfss	status,0,c
   802   000C26  EF17  F006         	goto	u641
   803   000C2A  EF19  F006         	goto	u640
   804   000C2E                     u641:
   805   000C2E  EF22  F006         	goto	l1607
   806   000C32                     u640:
   807   000C32  500C               	movf	___aldiv@divisor^0,w,c
   808   000C34  5E08               	subwf	___aldiv@dividend^0,f,c
   809   000C36  500D               	movf	(___aldiv@divisor+1)^0,w,c
   810   000C38  5A09               	subwfb	(___aldiv@dividend+1)^0,f,c
   811   000C3A  500E               	movf	(___aldiv@divisor+2)^0,w,c
   812   000C3C  5A0A               	subwfb	(___aldiv@dividend+2)^0,f,c
   813   000C3E  500F               	movf	(___aldiv@divisor+3)^0,w,c
   814   000C40  5A0B               	subwfb	(___aldiv@dividend+3)^0,f,c
   815   000C42  8012               	bsf	___aldiv@quotient^0,0,c
   816   000C44                     l1607:
   817   000C44  90D8               	bcf	status,0,c
   818   000C46  320F               	rrcf	(___aldiv@divisor+3)^0,f,c
   819   000C48  320E               	rrcf	(___aldiv@divisor+2)^0,f,c
   820   000C4A  320D               	rrcf	(___aldiv@divisor+1)^0,f,c
   821   000C4C  320C               	rrcf	___aldiv@divisor^0,f,c
   822   000C4E  2E10               	decfsz	___aldiv@counter^0,f,c
   823   000C50  EF05  F006         	goto	l1599
   824   000C54                     l1611:
   825   000C54  5011               	movf	___aldiv@sign^0,w,c
   826   000C56  B4D8               	btfsc	status,2,c
   827   000C58  EF30  F006         	goto	u651
   828   000C5C  EF32  F006         	goto	u650
   829   000C60                     u651:
   830   000C60  EF3A  F006         	goto	l1615
   831   000C64                     u650:
   832   000C64  1E15               	comf	(___aldiv@quotient+3)^0,f,c
   833   000C66  1E14               	comf	(___aldiv@quotient+2)^0,f,c
   834   000C68  1E13               	comf	(___aldiv@quotient+1)^0,f,c
   835   000C6A  6C12               	negf	___aldiv@quotient^0,c
   836   000C6C  0E00               	movlw	0
   837   000C6E  2213               	addwfc	(___aldiv@quotient+1)^0,f,c
   838   000C70  2214               	addwfc	(___aldiv@quotient+2)^0,f,c
   839   000C72  2215               	addwfc	(___aldiv@quotient+3)^0,f,c
   840   000C74                     l1615:
   841   000C74  C012  F008         	movff	___aldiv@quotient,?___aldiv
   842   000C78  C013  F009         	movff	___aldiv@quotient+1,?___aldiv+1
   843   000C7C  C014  F00A         	movff	___aldiv@quotient+2,?___aldiv+2
   844   000C80  C015  F00B         	movff	___aldiv@quotient+3,?___aldiv+3
   845   000C84  0012               	return		;funcret
   846   000C86                     __end_of___aldiv:
   847                           	callstack 0
   848                           
   849 ;; *************** function _LCD_String_xy *****************
   850 ;; Defined at:
   851 ;;		line 108 in file "lcd.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  row             1    wreg     unsigned char 
   854 ;;  pos             1   18[COMRAM] unsigned char 
   855 ;;  msg             2   19[COMRAM] PTR const unsigned char 
   856 ;;		 -> STR_3(11), STR_2(11), 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  row             1   21[COMRAM] unsigned char 
   859 ;;  location        1   22[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         3       0       0       0       0       0       0       0       0
   870 ;;      Locals:         2       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         5       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        5 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 5
   876 ;; This function calls:
   877 ;;		_LCD_Command
   878 ;;		_LCD_String
   879 ;; This function is called by:
   880 ;;		_setup
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text4
   885   000C86                     __ptext4:
   886                           	callstack 0
   887   000C86                     _LCD_String_xy:
   888                           	callstack 24
   889                           
   890                           ;incstack = 0
   891                           ;LCD_String_xy@row stored from wreg
   892   000C86  6E16               	movwf	LCD_String_xy@row^0,c
   893   000C88                     
   894                           ;lcd.c: 111: switch (row){
   895   000C88  EF66  F006         	goto	l1665
   896   000C8C                     l1647:
   897                           
   898                           ;lcd.c: 113: location=(unsigned char)((0x80) + (pos));
   899   000C8C  5013               	movf	LCD_String_xy@pos^0,w,c
   900   000C8E  0F80               	addlw	128
   901   000C90  6E17               	movwf	LCD_String_xy@location^0,c
   902   000C92                     
   903                           ;lcd.c: 114: LCD_Command(location);
   904   000C92  5017               	movf	LCD_String_xy@location^0,w,c
   905   000C94  EC31  F005         	call	_LCD_Command
   906                           
   907                           ;lcd.c: 115: break;
   908   000C98  EF79  F006         	goto	l1667
   909   000C9C                     l1651:
   910                           
   911                           ;lcd.c: 117: location=(unsigned char)((0xC0) + (pos));
   912   000C9C  5013               	movf	LCD_String_xy@pos^0,w,c
   913   000C9E  0FC0               	addlw	192
   914   000CA0  6E17               	movwf	LCD_String_xy@location^0,c
   915   000CA2                     
   916                           ;lcd.c: 118: LCD_Command(location);
   917   000CA2  5017               	movf	LCD_String_xy@location^0,w,c
   918   000CA4  EC31  F005         	call	_LCD_Command
   919                           
   920                           ;lcd.c: 119: break;
   921   000CA8  EF79  F006         	goto	l1667
   922   000CAC                     l1655:
   923                           
   924                           ;lcd.c: 121: location=(unsigned char)((0x94) + (pos));
   925   000CAC  5013               	movf	LCD_String_xy@pos^0,w,c
   926   000CAE  0F94               	addlw	148
   927   000CB0  6E17               	movwf	LCD_String_xy@location^0,c
   928   000CB2                     
   929                           ;lcd.c: 122: LCD_Command(location);
   930   000CB2  5017               	movf	LCD_String_xy@location^0,w,c
   931   000CB4  EC31  F005         	call	_LCD_Command
   932                           
   933                           ;lcd.c: 123: break;
   934   000CB8  EF79  F006         	goto	l1667
   935   000CBC                     l1659:
   936                           
   937                           ;lcd.c: 125: location=(unsigned char)((0xD4) + (pos));
   938   000CBC  5013               	movf	LCD_String_xy@pos^0,w,c
   939   000CBE  0FD4               	addlw	212
   940   000CC0  6E17               	movwf	LCD_String_xy@location^0,c
   941   000CC2                     
   942                           ;lcd.c: 126: LCD_Command(location);
   943   000CC2  5017               	movf	LCD_String_xy@location^0,w,c
   944   000CC4  EC31  F005         	call	_LCD_Command
   945                           
   946                           ;lcd.c: 127: break;
   947   000CC8  EF79  F006         	goto	l1667
   948   000CCC                     l1665:
   949   000CCC  5016               	movf	LCD_String_xy@row^0,w,c
   950                           
   951                           ; Switch size 1, requested type "simple"
   952                           ; Number of cases is 4, Range of values is 0 to 3
   953                           ; switch strategies available:
   954                           ; Name         Instructions Cycles
   955                           ; simple_byte           13     7 (average)
   956                           ;	Chosen strategy is simple_byte
   957   000CCE  0A00               	xorlw	0	; case 0
   958   000CD0  B4D8               	btfsc	status,2,c
   959   000CD2  EF46  F006         	goto	l1647
   960   000CD6  0A01               	xorlw	1	; case 1
   961   000CD8  B4D8               	btfsc	status,2,c
   962   000CDA  EF4E  F006         	goto	l1651
   963   000CDE  0A03               	xorlw	3	; case 2
   964   000CE0  B4D8               	btfsc	status,2,c
   965   000CE2  EF56  F006         	goto	l1655
   966   000CE6  0A01               	xorlw	1	; case 3
   967   000CE8  B4D8               	btfsc	status,2,c
   968   000CEA  EF5E  F006         	goto	l1659
   969   000CEE  EF79  F006         	goto	l1667
   970   000CF2                     l1667:
   971                           
   972                           ;lcd.c: 131: LCD_String(msg);
   973   000CF2  C014  F011         	movff	LCD_String_xy@msg,LCD_String@msg
   974   000CF6  C015  F012         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   975   000CFA  EC43  F007         	call	_LCD_String	;wreg free
   976   000CFE  0012               	return		;funcret
   977   000D00                     __end_of_LCD_String_xy:
   978                           	callstack 0
   979                           
   980 ;; *************** function _LCD_String *****************
   981 ;; Defined at:
   982 ;;		line 99 in file "lcd.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  msg             2   16[COMRAM] PTR const unsigned char 
   985 ;;		 -> STR_3(11), STR_2(11), 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         2       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1000 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 4
  1004 ;; This function calls:
  1005 ;;		_LCD_Char
  1006 ;; This function is called by:
  1007 ;;		_LCD_String_xy
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text5
  1012   000E86                     __ptext5:
  1013                           	callstack 0
  1014   000E86                     _LCD_String:
  1015                           	callstack 24
  1016   000E86                     
  1017                           ;lcd.c: 101: while((*msg)!=0)
  1018   000E86  EF4F  F007         	goto	l1573
  1019   000E8A                     l1569:
  1020                           
  1021                           ;lcd.c: 102: {;lcd.c: 103: LCD_Char(*msg);
  1022   000E8A  C011  FFF6         	movff	LCD_String@msg,tblptrl
  1023   000E8E  C012  FFF7         	movff	LCD_String@msg+1,tblptrh
  1024   000E92                     	if	0	;tblptru may be non-zero
  1025   000E92                     	endif
  1026   000E92                     	if	0	;tblptru may be non-zero
  1027   000E92                     	endif
  1028   000E92  0008               	tblrd		*
  1029   000E94  50F5               	movf	tablat,w,c
  1030   000E96  ECA5  F004         	call	_LCD_Char
  1031   000E9A                     
  1032                           ;lcd.c: 104: msg++;
  1033   000E9A  4A11               	infsnz	LCD_String@msg^0,f,c
  1034   000E9C  2A12               	incf	(LCD_String@msg+1)^0,f,c
  1035   000E9E                     l1573:
  1036   000E9E  C011  FFF6         	movff	LCD_String@msg,tblptrl
  1037   000EA2  C012  FFF7         	movff	LCD_String@msg+1,tblptrh
  1038   000EA6                     	if	0	;tblptru may be non-zero
  1039   000EA6                     	endif
  1040   000EA6                     	if	0	;tblptru may be non-zero
  1041   000EA6                     	endif
  1042   000EA6  0008               	tblrd		*
  1043   000EA8  50F5               	movf	tablat,w,c
  1044   000EAA  0900               	iorlw	0
  1045   000EAC  A4D8               	btfss	status,2,c
  1046   000EAE  EF5B  F007         	goto	u591
  1047   000EB2  EF5D  F007         	goto	u590
  1048   000EB6                     u591:
  1049   000EB6  EF45  F007         	goto	l1569
  1050   000EBA                     u590:
  1051   000EBA  0012               	return		;funcret
  1052   000EBC                     __end_of_LCD_String:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _LCD_Char *****************
  1056 ;; Defined at:
  1057 ;;		line 47 in file "lcd.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  dat             1    wreg     unsigned char 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  dat             1   15[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0
  1072 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1073 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1074 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 3
  1078 ;; This function calls:
  1079 ;;		_delay_ms
  1080 ;; This function is called by:
  1081 ;;		_LCD_String
  1082 ;;		_LCD_Char_xy
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text6
  1087   00094A                     __ptext6:
  1088                           	callstack 0
  1089   00094A                     _LCD_Char:
  1090                           	callstack 24
  1091                           
  1092                           ;incstack = 0
  1093                           ;LCD_Char@dat stored from wreg
  1094   00094A  6E10               	movwf	LCD_Char@dat^0,c
  1095   00094C                     
  1096                           ;lcd.c: 52: LATDbits.LATD4 = (unsigned short)((dat>>4)&0b1);
  1097   00094C  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1098   000950  3A0E               	swapf	??_LCD_Char^0,f,c
  1099   000952  0E0F               	movlw	15
  1100   000954  160E               	andwf	??_LCD_Char^0,f,c
  1101   000956  0E01               	movlw	1
  1102   000958  160E               	andwf	??_LCD_Char^0,f,c
  1103   00095A  3A0E               	swapf	??_LCD_Char^0,f,c
  1104   00095C  508C               	movf	140,w,c	;volatile
  1105   00095E  180E               	xorwf	??_LCD_Char^0,w,c
  1106   000960  0BEF               	andlw	-17
  1107   000962  180E               	xorwf	??_LCD_Char^0,w,c
  1108   000964  6E8C               	movwf	140,c	;volatile
  1109                           
  1110                           ;lcd.c: 53: LATDbits.LATD5 = (unsigned short)((dat>>5)&0b1);
  1111   000966  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1112   00096A  0E05               	movlw	5
  1113   00096C  6E0F               	movwf	(??_LCD_Char+1)^0,c
  1114   00096E                     u535:
  1115   00096E  90D8               	bcf	status,0,c
  1116   000970  320E               	rrcf	??_LCD_Char^0,f,c
  1117   000972  2E0F               	decfsz	(??_LCD_Char+1)^0,f,c
  1118   000974  EFB7  F004         	goto	u535
  1119   000978  0E01               	movlw	1
  1120   00097A  160E               	andwf	??_LCD_Char^0,f,c
  1121   00097C  3A0E               	swapf	??_LCD_Char^0,f,c
  1122   00097E  460E               	rlncf	??_LCD_Char^0,f,c
  1123   000980  508C               	movf	140,w,c	;volatile
  1124   000982  180E               	xorwf	??_LCD_Char^0,w,c
  1125   000984  0BDF               	andlw	-33
  1126   000986  180E               	xorwf	??_LCD_Char^0,w,c
  1127   000988  6E8C               	movwf	140,c	;volatile
  1128                           
  1129                           ;lcd.c: 54: LATDbits.LATD6 = (unsigned short)((dat>>6)&0b1);
  1130   00098A  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1131   00098E  0E06               	movlw	6
  1132   000990  6E0F               	movwf	(??_LCD_Char+1)^0,c
  1133   000992                     u545:
  1134   000992  90D8               	bcf	status,0,c
  1135   000994  320E               	rrcf	??_LCD_Char^0,f,c
  1136   000996  2E0F               	decfsz	(??_LCD_Char+1)^0,f,c
  1137   000998  EFC9  F004         	goto	u545
  1138   00099C  0E01               	movlw	1
  1139   00099E  160E               	andwf	??_LCD_Char^0,f,c
  1140   0009A0  3A0E               	swapf	??_LCD_Char^0,f,c
  1141   0009A2  460E               	rlncf	??_LCD_Char^0,f,c
  1142   0009A4  460E               	rlncf	??_LCD_Char^0,f,c
  1143   0009A6  508C               	movf	140,w,c	;volatile
  1144   0009A8  180E               	xorwf	??_LCD_Char^0,w,c
  1145   0009AA  0BBF               	andlw	-65
  1146   0009AC  180E               	xorwf	??_LCD_Char^0,w,c
  1147   0009AE  6E8C               	movwf	140,c	;volatile
  1148                           
  1149                           ;lcd.c: 55: LATDbits.LATD7 = (unsigned short)((dat>>7)&0b1);
  1150   0009B0  6A0E               	clrf	??_LCD_Char^0,c
  1151   0009B2  AE10               	btfss	LCD_Char@dat^0,7,c
  1152   0009B4  D001               	bra	u555
  1153   0009B6  2A0E               	incf	??_LCD_Char^0,f,c
  1154   0009B8                     u555:
  1155   0009B8  0E01               	movlw	1
  1156   0009BA  160E               	andwf	??_LCD_Char^0,f,c
  1157   0009BC  320E               	rrcf	??_LCD_Char^0,f,c
  1158   0009BE  320E               	rrcf	??_LCD_Char^0,f,c
  1159   0009C0  508C               	movf	140,w,c	;volatile
  1160   0009C2  180E               	xorwf	??_LCD_Char^0,w,c
  1161   0009C4  0B7F               	andlw	-129
  1162   0009C6  180E               	xorwf	??_LCD_Char^0,w,c
  1163   0009C8  6E8C               	movwf	140,c	;volatile
  1164   0009CA                     
  1165                           ;lcd.c: 57: LATDbits.LATD2 = 1;
  1166   0009CA  848C               	bsf	140,2,c	;volatile
  1167   0009CC                     
  1168                           ;lcd.c: 58: LATDbits.LATD3 = 1;
  1169   0009CC  868C               	bsf	140,3,c	;volatile
  1170   0009CE                     
  1171                           ;lcd.c: 59: __nop();
  1172   0009CE  F000               	nop	
  1173   0009D0                     
  1174                           ;lcd.c: 60: LATDbits.LATD3 = 0;
  1175   0009D0  968C               	bcf	140,3,c	;volatile
  1176   0009D2                     
  1177                           ;lcd.c: 61: delay_ms(1);
  1178   0009D2  0E00               	movlw	0
  1179   0009D4  6E09               	movwf	(delay_ms@milliseconds+1)^0,c
  1180   0009D6  0E01               	movlw	1
  1181   0009D8  6E08               	movwf	delay_ms@milliseconds^0,c
  1182   0009DA  EC02  F007         	call	_delay_ms	;wreg free
  1183   0009DE                     
  1184                           ;lcd.c: 63: LATDbits.LATD4 =(unsigned short)((dat)&0b1);
  1185   0009DE  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1186   0009E2  0E01               	movlw	1
  1187   0009E4  160E               	andwf	??_LCD_Char^0,f,c
  1188   0009E6  3A0E               	swapf	??_LCD_Char^0,f,c
  1189   0009E8  508C               	movf	140,w,c	;volatile
  1190   0009EA  180E               	xorwf	??_LCD_Char^0,w,c
  1191   0009EC  0BEF               	andlw	-17
  1192   0009EE  180E               	xorwf	??_LCD_Char^0,w,c
  1193   0009F0  6E8C               	movwf	140,c	;volatile
  1194   0009F2                     
  1195                           ;lcd.c: 64: LATDbits.LATD5 = (unsigned short)((dat>>1)&0b1);
  1196   0009F2  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1197   0009F6  90D8               	bcf	status,0,c
  1198   0009F8  320E               	rrcf	??_LCD_Char^0,f,c
  1199   0009FA  0E01               	movlw	1
  1200   0009FC  160E               	andwf	??_LCD_Char^0,f,c
  1201   0009FE  3A0E               	swapf	??_LCD_Char^0,f,c
  1202   000A00  460E               	rlncf	??_LCD_Char^0,f,c
  1203   000A02  508C               	movf	140,w,c	;volatile
  1204   000A04  180E               	xorwf	??_LCD_Char^0,w,c
  1205   000A06  0BDF               	andlw	-33
  1206   000A08  180E               	xorwf	??_LCD_Char^0,w,c
  1207   000A0A  6E8C               	movwf	140,c	;volatile
  1208   000A0C                     
  1209                           ;lcd.c: 65: LATDbits.LATD6 = (unsigned short)((dat>>2)&0b1);
  1210   000A0C  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1211   000A10  90D8               	bcf	status,0,c
  1212   000A12  320E               	rrcf	??_LCD_Char^0,f,c
  1213   000A14  90D8               	bcf	status,0,c
  1214   000A16  320E               	rrcf	??_LCD_Char^0,f,c
  1215   000A18  0E01               	movlw	1
  1216   000A1A  160E               	andwf	??_LCD_Char^0,f,c
  1217   000A1C  3A0E               	swapf	??_LCD_Char^0,f,c
  1218   000A1E  460E               	rlncf	??_LCD_Char^0,f,c
  1219   000A20  460E               	rlncf	??_LCD_Char^0,f,c
  1220   000A22  508C               	movf	140,w,c	;volatile
  1221   000A24  180E               	xorwf	??_LCD_Char^0,w,c
  1222   000A26  0BBF               	andlw	-65
  1223   000A28  180E               	xorwf	??_LCD_Char^0,w,c
  1224   000A2A  6E8C               	movwf	140,c	;volatile
  1225   000A2C                     
  1226                           ;lcd.c: 66: LATDbits.LATD7 = (unsigned short)((dat>>3)&0b1);
  1227   000A2C  C010  F00E         	movff	LCD_Char@dat,??_LCD_Char
  1228   000A30  90D8               	bcf	status,0,c
  1229   000A32  320E               	rrcf	??_LCD_Char^0,f,c
  1230   000A34  90D8               	bcf	status,0,c
  1231   000A36  320E               	rrcf	??_LCD_Char^0,f,c
  1232   000A38  90D8               	bcf	status,0,c
  1233   000A3A  320E               	rrcf	??_LCD_Char^0,f,c
  1234   000A3C  0E01               	movlw	1
  1235   000A3E  160E               	andwf	??_LCD_Char^0,f,c
  1236   000A40  320E               	rrcf	??_LCD_Char^0,f,c
  1237   000A42  320E               	rrcf	??_LCD_Char^0,f,c
  1238   000A44  508C               	movf	140,w,c	;volatile
  1239   000A46  180E               	xorwf	??_LCD_Char^0,w,c
  1240   000A48  0B7F               	andlw	-129
  1241   000A4A  180E               	xorwf	??_LCD_Char^0,w,c
  1242   000A4C  6E8C               	movwf	140,c	;volatile
  1243   000A4E                     
  1244                           ;lcd.c: 67: LATDbits.LATD3 = 1;
  1245   000A4E  868C               	bsf	140,3,c	;volatile
  1246   000A50                     
  1247                           ;lcd.c: 68: __nop();
  1248   000A50  F000               	nop	
  1249   000A52                     
  1250                           ;lcd.c: 69: LATDbits.LATD3 = 0;
  1251   000A52  968C               	bcf	140,3,c	;volatile
  1252   000A54                     
  1253                           ;lcd.c: 70: delay_ms(3);
  1254   000A54  0E00               	movlw	0
  1255   000A56  6E09               	movwf	(delay_ms@milliseconds+1)^0,c
  1256   000A58  0E03               	movlw	3
  1257   000A5A  6E08               	movwf	delay_ms@milliseconds^0,c
  1258   000A5C  EC02  F007         	call	_delay_ms	;wreg free
  1259   000A60  0012               	return		;funcret
  1260   000A62                     __end_of_LCD_Char:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function _LCD_Init *****************
  1264 ;; Defined at:
  1265 ;;		line 28 in file "lcd.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 4
  1286 ;; This function calls:
  1287 ;;		_LCD_Command
  1288 ;;		_delay_ms
  1289 ;; This function is called by:
  1290 ;;		_setup
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text7
  1295   000E4E                     __ptext7:
  1296                           	callstack 0
  1297   000E4E                     _LCD_Init:
  1298                           	callstack 25
  1299   000E4E                     
  1300                           ;lcd.c: 30: TRISDbits.RD2 = 0;
  1301   000E4E  9495               	bcf	149,2,c	;volatile
  1302                           
  1303                           ;lcd.c: 31: TRISDbits.RD3 = 0;
  1304   000E50  9695               	bcf	149,3,c	;volatile
  1305                           
  1306                           ;lcd.c: 32: TRISDbits.RD4 = 0;
  1307   000E52  9895               	bcf	149,4,c	;volatile
  1308                           
  1309                           ;lcd.c: 33: TRISDbits.RD5 = 0;
  1310   000E54  9A95               	bcf	149,5,c	;volatile
  1311                           
  1312                           ;lcd.c: 34: TRISDbits.RD6 = 0;
  1313   000E56  9C95               	bcf	149,6,c	;volatile
  1314                           
  1315                           ;lcd.c: 35: TRISDbits.RD7 = 0;
  1316   000E58  9E95               	bcf	149,7,c	;volatile
  1317   000E5A                     
  1318                           ;lcd.c: 37: delay_ms(40);
  1319   000E5A  0E00               	movlw	0
  1320   000E5C  6E09               	movwf	(delay_ms@milliseconds+1)^0,c
  1321   000E5E  0E28               	movlw	40
  1322   000E60  6E08               	movwf	delay_ms@milliseconds^0,c
  1323   000E62  EC02  F007         	call	_delay_ms	;wreg free
  1324                           
  1325                           ;lcd.c: 38: LCD_Command(0x02);
  1326   000E66  0E02               	movlw	2
  1327   000E68  EC31  F005         	call	_LCD_Command
  1328                           
  1329                           ;lcd.c: 40: LCD_Command(0x28);
  1330   000E6C  0E28               	movlw	40
  1331   000E6E  EC31  F005         	call	_LCD_Command
  1332                           
  1333                           ;lcd.c: 42: LCD_Command(0x01);
  1334   000E72  0E01               	movlw	1
  1335   000E74  EC31  F005         	call	_LCD_Command
  1336                           
  1337                           ;lcd.c: 43: LCD_Command(0x0c);
  1338   000E78  0E0C               	movlw	12
  1339   000E7A  EC31  F005         	call	_LCD_Command
  1340                           
  1341                           ;lcd.c: 44: LCD_Command(0x06);
  1342   000E7E  0E06               	movlw	6
  1343   000E80  EC31  F005         	call	_LCD_Command
  1344   000E84  0012               	return		;funcret
  1345   000E86                     __end_of_LCD_Init:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _LCD_Command *****************
  1349 ;; Defined at:
  1350 ;;		line 5 in file "lcd.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  cmd             1    wreg     unsigned char 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  cmd             1   15[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0
  1365 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1366 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1367 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 3
  1371 ;; This function calls:
  1372 ;;		_delay_ms
  1373 ;; This function is called by:
  1374 ;;		_LCD_Init
  1375 ;;		_LCD_String_xy
  1376 ;;		_LCD_Char_xy
  1377 ;;		_LCD_Clear
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text8
  1382   000A62                     __ptext8:
  1383                           	callstack 0
  1384   000A62                     _LCD_Command:
  1385                           	callstack 25
  1386                           
  1387                           ;incstack = 0
  1388                           ;LCD_Command@cmd stored from wreg
  1389   000A62  6E10               	movwf	LCD_Command@cmd^0,c
  1390   000A64                     
  1391                           ;lcd.c: 8: LATDbits.LATD4 = (unsigned short)((cmd>>4)&0b1);
  1392   000A64  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1393   000A68  3A0E               	swapf	??_LCD_Command^0,f,c
  1394   000A6A  0E0F               	movlw	15
  1395   000A6C  160E               	andwf	??_LCD_Command^0,f,c
  1396   000A6E  0E01               	movlw	1
  1397   000A70  160E               	andwf	??_LCD_Command^0,f,c
  1398   000A72  3A0E               	swapf	??_LCD_Command^0,f,c
  1399   000A74  508C               	movf	140,w,c	;volatile
  1400   000A76  180E               	xorwf	??_LCD_Command^0,w,c
  1401   000A78  0BEF               	andlw	-17
  1402   000A7A  180E               	xorwf	??_LCD_Command^0,w,c
  1403   000A7C  6E8C               	movwf	140,c	;volatile
  1404                           
  1405                           ;lcd.c: 9: LATDbits.LATD5 = (unsigned short)((cmd>>5)&0b1);
  1406   000A7E  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1407   000A82  0E05               	movlw	5
  1408   000A84  6E0F               	movwf	(??_LCD_Command+1)^0,c
  1409   000A86                     u565:
  1410   000A86  90D8               	bcf	status,0,c
  1411   000A88  320E               	rrcf	??_LCD_Command^0,f,c
  1412   000A8A  2E0F               	decfsz	(??_LCD_Command+1)^0,f,c
  1413   000A8C  EF43  F005         	goto	u565
  1414   000A90  0E01               	movlw	1
  1415   000A92  160E               	andwf	??_LCD_Command^0,f,c
  1416   000A94  3A0E               	swapf	??_LCD_Command^0,f,c
  1417   000A96  460E               	rlncf	??_LCD_Command^0,f,c
  1418   000A98  508C               	movf	140,w,c	;volatile
  1419   000A9A  180E               	xorwf	??_LCD_Command^0,w,c
  1420   000A9C  0BDF               	andlw	-33
  1421   000A9E  180E               	xorwf	??_LCD_Command^0,w,c
  1422   000AA0  6E8C               	movwf	140,c	;volatile
  1423                           
  1424                           ;lcd.c: 10: LATDbits.LATD6 = (unsigned short)((cmd>>6)&0b1);
  1425   000AA2  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1426   000AA6  0E06               	movlw	6
  1427   000AA8  6E0F               	movwf	(??_LCD_Command+1)^0,c
  1428   000AAA                     u575:
  1429   000AAA  90D8               	bcf	status,0,c
  1430   000AAC  320E               	rrcf	??_LCD_Command^0,f,c
  1431   000AAE  2E0F               	decfsz	(??_LCD_Command+1)^0,f,c
  1432   000AB0  EF55  F005         	goto	u575
  1433   000AB4  0E01               	movlw	1
  1434   000AB6  160E               	andwf	??_LCD_Command^0,f,c
  1435   000AB8  3A0E               	swapf	??_LCD_Command^0,f,c
  1436   000ABA  460E               	rlncf	??_LCD_Command^0,f,c
  1437   000ABC  460E               	rlncf	??_LCD_Command^0,f,c
  1438   000ABE  508C               	movf	140,w,c	;volatile
  1439   000AC0  180E               	xorwf	??_LCD_Command^0,w,c
  1440   000AC2  0BBF               	andlw	-65
  1441   000AC4  180E               	xorwf	??_LCD_Command^0,w,c
  1442   000AC6  6E8C               	movwf	140,c	;volatile
  1443                           
  1444                           ;lcd.c: 11: LATDbits.LATD7 = (unsigned short)((cmd>>7)&0b1);
  1445   000AC8  6A0E               	clrf	??_LCD_Command^0,c
  1446   000ACA  AE10               	btfss	LCD_Command@cmd^0,7,c
  1447   000ACC  D001               	bra	u585
  1448   000ACE  2A0E               	incf	??_LCD_Command^0,f,c
  1449   000AD0                     u585:
  1450   000AD0  0E01               	movlw	1
  1451   000AD2  160E               	andwf	??_LCD_Command^0,f,c
  1452   000AD4  320E               	rrcf	??_LCD_Command^0,f,c
  1453   000AD6  320E               	rrcf	??_LCD_Command^0,f,c
  1454   000AD8  508C               	movf	140,w,c	;volatile
  1455   000ADA  180E               	xorwf	??_LCD_Command^0,w,c
  1456   000ADC  0B7F               	andlw	-129
  1457   000ADE  180E               	xorwf	??_LCD_Command^0,w,c
  1458   000AE0  6E8C               	movwf	140,c	;volatile
  1459   000AE2                     
  1460                           ;lcd.c: 12: LATDbits.LATD2 = 0;
  1461   000AE2  948C               	bcf	140,2,c	;volatile
  1462   000AE4                     
  1463                           ;lcd.c: 13: LATDbits.LATD3 = 1;
  1464   000AE4  868C               	bsf	140,3,c	;volatile
  1465   000AE6                     
  1466                           ;lcd.c: 14: __nop();
  1467   000AE6  F000               	nop	
  1468   000AE8                     
  1469                           ;lcd.c: 15: LATDbits.LATD3 = 0;
  1470   000AE8  968C               	bcf	140,3,c	;volatile
  1471   000AEA                     
  1472                           ;lcd.c: 16: delay_ms(1);
  1473   000AEA  0E00               	movlw	0
  1474   000AEC  6E09               	movwf	(delay_ms@milliseconds+1)^0,c
  1475   000AEE  0E01               	movlw	1
  1476   000AF0  6E08               	movwf	delay_ms@milliseconds^0,c
  1477   000AF2  EC02  F007         	call	_delay_ms	;wreg free
  1478   000AF6                     
  1479                           ;lcd.c: 18: LATDbits.LATD4 =(unsigned short)((cmd)&0b1);
  1480   000AF6  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1481   000AFA  0E01               	movlw	1
  1482   000AFC  160E               	andwf	??_LCD_Command^0,f,c
  1483   000AFE  3A0E               	swapf	??_LCD_Command^0,f,c
  1484   000B00  508C               	movf	140,w,c	;volatile
  1485   000B02  180E               	xorwf	??_LCD_Command^0,w,c
  1486   000B04  0BEF               	andlw	-17
  1487   000B06  180E               	xorwf	??_LCD_Command^0,w,c
  1488   000B08  6E8C               	movwf	140,c	;volatile
  1489   000B0A                     
  1490                           ;lcd.c: 19: LATDbits.LATD5 = (unsigned short)((cmd>>1)&0b1);
  1491   000B0A  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1492   000B0E  90D8               	bcf	status,0,c
  1493   000B10  320E               	rrcf	??_LCD_Command^0,f,c
  1494   000B12  0E01               	movlw	1
  1495   000B14  160E               	andwf	??_LCD_Command^0,f,c
  1496   000B16  3A0E               	swapf	??_LCD_Command^0,f,c
  1497   000B18  460E               	rlncf	??_LCD_Command^0,f,c
  1498   000B1A  508C               	movf	140,w,c	;volatile
  1499   000B1C  180E               	xorwf	??_LCD_Command^0,w,c
  1500   000B1E  0BDF               	andlw	-33
  1501   000B20  180E               	xorwf	??_LCD_Command^0,w,c
  1502   000B22  6E8C               	movwf	140,c	;volatile
  1503   000B24                     
  1504                           ;lcd.c: 20: LATDbits.LATD6 = (unsigned short)((cmd>>2)&0b1);
  1505   000B24  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1506   000B28  90D8               	bcf	status,0,c
  1507   000B2A  320E               	rrcf	??_LCD_Command^0,f,c
  1508   000B2C  90D8               	bcf	status,0,c
  1509   000B2E  320E               	rrcf	??_LCD_Command^0,f,c
  1510   000B30  0E01               	movlw	1
  1511   000B32  160E               	andwf	??_LCD_Command^0,f,c
  1512   000B34  3A0E               	swapf	??_LCD_Command^0,f,c
  1513   000B36  460E               	rlncf	??_LCD_Command^0,f,c
  1514   000B38  460E               	rlncf	??_LCD_Command^0,f,c
  1515   000B3A  508C               	movf	140,w,c	;volatile
  1516   000B3C  180E               	xorwf	??_LCD_Command^0,w,c
  1517   000B3E  0BBF               	andlw	-65
  1518   000B40  180E               	xorwf	??_LCD_Command^0,w,c
  1519   000B42  6E8C               	movwf	140,c	;volatile
  1520   000B44                     
  1521                           ;lcd.c: 21: LATDbits.LATD7 = (unsigned short)((cmd>>3)&0b1);
  1522   000B44  C010  F00E         	movff	LCD_Command@cmd,??_LCD_Command
  1523   000B48  90D8               	bcf	status,0,c
  1524   000B4A  320E               	rrcf	??_LCD_Command^0,f,c
  1525   000B4C  90D8               	bcf	status,0,c
  1526   000B4E  320E               	rrcf	??_LCD_Command^0,f,c
  1527   000B50  90D8               	bcf	status,0,c
  1528   000B52  320E               	rrcf	??_LCD_Command^0,f,c
  1529   000B54  0E01               	movlw	1
  1530   000B56  160E               	andwf	??_LCD_Command^0,f,c
  1531   000B58  320E               	rrcf	??_LCD_Command^0,f,c
  1532   000B5A  320E               	rrcf	??_LCD_Command^0,f,c
  1533   000B5C  508C               	movf	140,w,c	;volatile
  1534   000B5E  180E               	xorwf	??_LCD_Command^0,w,c
  1535   000B60  0B7F               	andlw	-129
  1536   000B62  180E               	xorwf	??_LCD_Command^0,w,c
  1537   000B64  6E8C               	movwf	140,c	;volatile
  1538   000B66                     
  1539                           ;lcd.c: 22: LATDbits.LATD3 = 1;
  1540   000B66  868C               	bsf	140,3,c	;volatile
  1541   000B68                     
  1542                           ;lcd.c: 23: __nop();
  1543   000B68  F000               	nop	
  1544   000B6A                     
  1545                           ;lcd.c: 24: LATDbits.LATD3 = 0;
  1546   000B6A  968C               	bcf	140,3,c	;volatile
  1547   000B6C                     
  1548                           ;lcd.c: 25: delay_ms(3);
  1549   000B6C  0E00               	movlw	0
  1550   000B6E  6E09               	movwf	(delay_ms@milliseconds+1)^0,c
  1551   000B70  0E03               	movlw	3
  1552   000B72  6E08               	movwf	delay_ms@milliseconds^0,c
  1553   000B74  EC02  F007         	call	_delay_ms	;wreg free
  1554   000B78  0012               	return		;funcret
  1555   000B7A                     __end_of_LCD_Command:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _delay_ms *****************
  1559 ;; Defined at:
  1560 ;;		line 4 in file "delay.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  milliseconds    2    7[COMRAM] unsigned int 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  j               2   11[COMRAM] unsigned int 
  1565 ;;  i               2    9[COMRAM] unsigned int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         2       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1578 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1579 ;;Total ram usage:        6 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 2
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_LCD_Command
  1586 ;;		_LCD_Init
  1587 ;;		_LCD_Char
  1588 ;;		_delay_s
  1589 ;;		_LCD_Clear
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text9
  1594   000E04                     __ptext9:
  1595                           	callstack 0
  1596   000E04                     _delay_ms:
  1597                           	callstack 24
  1598   000E04                     
  1599                           ;delay.c: 5: unsigned int i;;delay.c: 6: unsigned int j;;delay.c: 8: for(i = 0; i < mill
      +                          iseconds; i++) {
  1600   000E04  0E00               	movlw	0
  1601   000E06  6E0B               	movwf	(delay_ms@i+1)^0,c
  1602   000E08  0E00               	movlw	0
  1603   000E0A  6E0A               	movwf	delay_ms@i^0,c
  1604   000E0C  EF1B  F007         	goto	l1509
  1605   000E10                     l1497:
  1606                           
  1607                           ;delay.c: 9: for(j = 0; j < 20000000 / 51912; j++);
  1608   000E10  0E00               	movlw	0
  1609   000E12  6E0D               	movwf	(delay_ms@j+1)^0,c
  1610   000E14  0E00               	movlw	0
  1611   000E16  6E0C               	movwf	delay_ms@j^0,c
  1612   000E18                     l1503:
  1613   000E18  4A0C               	infsnz	delay_ms@j^0,f,c
  1614   000E1A  2A0D               	incf	(delay_ms@j+1)^0,f,c
  1615   000E1C  0E81               	movlw	129
  1616   000E1E  5C0C               	subwf	delay_ms@j^0,w,c
  1617   000E20  0E01               	movlw	1
  1618   000E22  580D               	subwfb	(delay_ms@j+1)^0,w,c
  1619   000E24  A0D8               	btfss	status,0,c
  1620   000E26  EF17  F007         	goto	u511
  1621   000E2A  EF19  F007         	goto	u510
  1622   000E2E                     u511:
  1623   000E2E  EF0C  F007         	goto	l1503
  1624   000E32                     u510:
  1625   000E32  4A0A               	infsnz	delay_ms@i^0,f,c
  1626   000E34  2A0B               	incf	(delay_ms@i+1)^0,f,c
  1627   000E36                     l1509:
  1628   000E36  5008               	movf	delay_ms@milliseconds^0,w,c
  1629   000E38  5C0A               	subwf	delay_ms@i^0,w,c
  1630   000E3A  5009               	movf	(delay_ms@milliseconds+1)^0,w,c
  1631   000E3C  580B               	subwfb	(delay_ms@i+1)^0,w,c
  1632   000E3E  A0D8               	btfss	status,0,c
  1633   000E40  EF24  F007         	goto	u521
  1634   000E44  EF26  F007         	goto	u520
  1635   000E48                     u521:
  1636   000E48  EF08  F007         	goto	l1497
  1637   000E4C                     u520:
  1638   000E4C  0012               	return		;funcret
  1639   000E4E                     __end_of_delay_ms:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _ADC_Init *****************
  1643 ;; Defined at:
  1644 ;;		line 5 in file "adc.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  channel         2    7[COMRAM] unsigned short 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         2       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        3 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 2
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_setup
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text10
  1673   000F3C                     __ptext10:
  1674                           	callstack 0
  1675   000F3C                     _ADC_Init:
  1676                           	callstack 27
  1677   000F3C                     
  1678                           ;adc.c: 6: ADCON1bits.PCFG0 = 0;
  1679   000F3C  90C1               	bcf	193,0,c	;volatile
  1680                           
  1681                           ;adc.c: 7: ADCON1bits.PCFG1 = 0;
  1682   000F3E  92C1               	bcf	193,1,c	;volatile
  1683   000F40                     
  1684                           ;adc.c: 8: ADCON1bits.PCFG = (0b1111 - (channel + 1));
  1685   000F40  5008               	movf	ADC_Init@channel^0,w,c
  1686   000F42  080E               	sublw	14
  1687   000F44  6E0A               	movwf	??_ADC_Init^0,c
  1688   000F46  50C1               	movf	193,w,c	;volatile
  1689   000F48  180A               	xorwf	??_ADC_Init^0,w,c
  1690   000F4A  0BF0               	andlw	-16
  1691   000F4C  180A               	xorwf	??_ADC_Init^0,w,c
  1692   000F4E  6EC1               	movwf	193,c	;volatile
  1693   000F50                     
  1694                           ;adc.c: 9: ADCON2bits.ADFM = 1;
  1695   000F50  8EC0               	bsf	192,7,c	;volatile
  1696   000F52                     
  1697                           ;adc.c: 10: ADCON2bits.ACQT = 0b010;
  1698   000F52  50C0               	movf	192,w,c	;volatile
  1699   000F54  0BC7               	andlw	-57
  1700   000F56  0910               	iorlw	16
  1701   000F58  6EC0               	movwf	192,c	;volatile
  1702   000F5A                     
  1703                           ;adc.c: 11: ADCON2bits.ADCS = 0b101;
  1704   000F5A  50C0               	movf	192,w,c	;volatile
  1705   000F5C  0BF8               	andlw	-8
  1706   000F5E  0905               	iorlw	5
  1707   000F60  6EC0               	movwf	192,c	;volatile
  1708   000F62  0012               	return		;funcret
  1709   000F64                     __end_of_ADC_Init:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _UART_Write_Text_ln *****************
  1713 ;; Defined at:
  1714 ;;		line 47 in file "uart.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  txt             2   14[COMRAM] PTR unsigned char 
  1717 ;;		 -> STR_1(5), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 4
  1736 ;; This function calls:
  1737 ;;		_UART_Write
  1738 ;;		_UART_Write_Text
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text11
  1745   000F64                     __ptext11:
  1746                           	callstack 0
  1747   000F64                     _UART_Write_Text_ln:
  1748                           	callstack 26
  1749   000F64                     
  1750                           ;uart.c: 48: UART_Write_Text(txt);
  1751   000F64  C00F  F009         	movff	UART_Write_Text_ln@txt,UART_Write_Text@txt
  1752   000F68  C010  F00A         	movff	UART_Write_Text_ln@txt+1,UART_Write_Text@txt+1
  1753   000F6C  ECAE  F006         	call	_UART_Write_Text	;wreg free
  1754   000F70                     
  1755                           ;uart.c: 49: UART_Write('\r');
  1756   000F70  0E0D               	movlw	13
  1757   000F72  ECBF  F007         	call	_UART_Write
  1758   000F76                     
  1759                           ;uart.c: 50: UART_Write('\n');
  1760   000F76  0E0A               	movlw	10
  1761   000F78  ECBF  F007         	call	_UART_Write
  1762   000F7C  0012               	return		;funcret
  1763   000F7E                     __end_of_UART_Write_Text_ln:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _UART_Write_Text *****************
  1767 ;; Defined at:
  1768 ;;		line 41 in file "uart.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  txt             2    8[COMRAM] PTR unsigned char 
  1771 ;;		 -> STR_1(5), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  i               2   12[COMRAM] int 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1783 ;;      Params:         2       0       0       0       0       0       0       0       0
  1784 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1785 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1786 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1787 ;;Total ram usage:        6 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 3
  1790 ;; This function calls:
  1791 ;;		_UART_Write
  1792 ;; This function is called by:
  1793 ;;		_UART_Write_Text_ln
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text12
  1798   000D5C                     __ptext12:
  1799                           	callstack 0
  1800   000D5C                     _UART_Write_Text:
  1801                           	callstack 26
  1802   000D5C                     
  1803                           ;uart.c: 42: int i;;uart.c: 44: for(i = 0; txt[i] != '\0'; i++) UART_Write(txt[i]);
  1804   000D5C  0E00               	movlw	0
  1805   000D5E  6E0E               	movwf	(UART_Write_Text@i+1)^0,c
  1806   000D60  0E00               	movlw	0
  1807   000D62  6E0D               	movwf	UART_Write_Text@i^0,c
  1808   000D64  EFC4  F006         	goto	l1675
  1809   000D68                     l1671:
  1810   000D68  500D               	movf	UART_Write_Text@i^0,w,c
  1811   000D6A  2409               	addwf	UART_Write_Text@txt^0,w,c
  1812   000D6C  6E0B               	movwf	??_UART_Write_Text^0,c
  1813   000D6E  500E               	movf	(UART_Write_Text@i+1)^0,w,c
  1814   000D70  200A               	addwfc	(UART_Write_Text@txt+1)^0,w,c
  1815   000D72  6E0C               	movwf	(??_UART_Write_Text+1)^0,c
  1816   000D74  C00B  FFF6         	movff	??_UART_Write_Text,tblptrl
  1817   000D78  C00C  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1818   000D7C                     	if	0	;tblptru may be non-zero
  1819   000D7C                     	endif
  1820   000D7C                     	if	0	;tblptru may be non-zero
  1821   000D7C                     	endif
  1822   000D7C  0008               	tblrd		*
  1823   000D7E  50F5               	movf	tablat,w,c
  1824   000D80  ECBF  F007         	call	_UART_Write
  1825   000D84  4A0D               	infsnz	UART_Write_Text@i^0,f,c
  1826   000D86  2A0E               	incf	(UART_Write_Text@i+1)^0,f,c
  1827   000D88                     l1675:
  1828   000D88  500D               	movf	UART_Write_Text@i^0,w,c
  1829   000D8A  2409               	addwf	UART_Write_Text@txt^0,w,c
  1830   000D8C  6E0B               	movwf	??_UART_Write_Text^0,c
  1831   000D8E  500E               	movf	(UART_Write_Text@i+1)^0,w,c
  1832   000D90  200A               	addwfc	(UART_Write_Text@txt+1)^0,w,c
  1833   000D92  6E0C               	movwf	(??_UART_Write_Text+1)^0,c
  1834   000D94  C00B  FFF6         	movff	??_UART_Write_Text,tblptrl
  1835   000D98  C00C  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1836   000D9C                     	if	0	;tblptru may be non-zero
  1837   000D9C                     	endif
  1838   000D9C                     	if	0	;tblptru may be non-zero
  1839   000D9C                     	endif
  1840   000D9C  0008               	tblrd		*
  1841   000D9E  50F5               	movf	tablat,w,c
  1842   000DA0  0900               	iorlw	0
  1843   000DA2  A4D8               	btfss	status,2,c
  1844   000DA4  EFD6  F006         	goto	u721
  1845   000DA8  EFD8  F006         	goto	u720
  1846   000DAC                     u721:
  1847   000DAC  EFB4  F006         	goto	l1671
  1848   000DB0                     u720:
  1849   000DB0  0012               	return		;funcret
  1850   000DB2                     __end_of_UART_Write_Text:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _UART_Write *****************
  1854 ;; Defined at:
  1855 ;;		line 30 in file "uart.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  data            1    wreg     const unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  data            1    7[COMRAM] const unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        1 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 2
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_UART_Write_Text
  1880 ;;		_UART_Write_Text_ln
  1881 ;;		_UART_Write_ln
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text13
  1886   000F7E                     __ptext13:
  1887                           	callstack 0
  1888   000F7E                     _UART_Write:
  1889                           	callstack 26
  1890                           
  1891                           ;incstack = 0
  1892                           ;UART_Write@data stored from wreg
  1893   000F7E  6E08               	movwf	UART_Write@data^0,c
  1894   000F80                     l81:
  1895   000F80  A2AC               	btfss	172,1,c	;volatile
  1896   000F82  EFC5  F007         	goto	u61
  1897   000F86  EFC7  F007         	goto	u60
  1898   000F8A                     u61:
  1899   000F8A  EFC0  F007         	goto	l81
  1900   000F8E                     u60:
  1901   000F8E                     
  1902                           ;uart.c: 32: TXREG = data;
  1903   000F8E  C008  FFAD         	movff	UART_Write@data,4013	;volatile
  1904   000F92  0012               	return		;funcret
  1905   000F94                     __end_of_UART_Write:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _Interrupt *****************
  1909 ;; Defined at:
  1910 ;;		line 15 in file "main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 1
  1931 ;; This function calls:
  1932 ;;		_UART_Interrupt
  1933 ;; This function is called by:
  1934 ;;		Interrupt level 2
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	intcode
  1939   000008                     __pintcode:
  1940                           	callstack 0
  1941   000008                     _Interrupt:
  1942                           	callstack 24
  1943                           
  1944                           ;incstack = 0
  1945   000008  8239               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1946   00000A  ED75  F007         	call	int_func,f	;refresh shadow registers
  1947                           
  1948                           	psect	intcode_body
  1949   000EEA                     __pintcode_body:
  1950                           	callstack 24
  1951   000EEA                     int_func:
  1952                           	callstack 24
  1953   000EEA  0006               	pop		; remove dummy address from shadow register refresh
  1954   000EEC  CFE1 F004          	movff	fsr1l,??_Interrupt
  1955   000EF0  CFE2 F005          	movff	fsr1h,??_Interrupt+1
  1956   000EF4  CFD9 F006          	movff	fsr2l,??_Interrupt+2
  1957   000EF8  CFDA F007          	movff	fsr2h,??_Interrupt+3
  1958   000EFC                     
  1959                           ;main.c: 16: UART_Interrupt();
  1960   000EFC  EC80  F006         	call	_UART_Interrupt	;wreg free
  1961   000F00  C007  FFDA         	movff	??_Interrupt+3,fsr2h
  1962   000F04  C006  FFD9         	movff	??_Interrupt+2,fsr2l
  1963   000F08  C005  FFE2         	movff	??_Interrupt+1,fsr1h
  1964   000F0C  C004  FFE1         	movff	??_Interrupt,fsr1l
  1965   000F10  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1966   000F12  0011               	retfie		f
  1967   000F14                     __end_of_Interrupt:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _UART_Interrupt *****************
  1971 ;; Defined at:
  1972 ;;		line 65 in file "uart.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  i               2    1[COMRAM] unsigned int 
  1977 ;;  temp            1    0[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1990 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_Interrupt
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text15
  2001   000D00                     __ptext15:
  2002                           	callstack 0
  2003   000D00                     _UART_Interrupt:
  2004                           	callstack 24
  2005   000D00                     
  2006                           ;uart.c: 66: if(RCIF){
  2007   000D00  AA9E               	btfss	3998,5,c	;volatile
  2008   000D02  EF85  F006         	goto	i2u24_41
  2009   000D06  EF87  F006         	goto	i2u24_40
  2010   000D0A                     i2u24_41:
  2011   000D0A  EFAD  F006         	goto	i2l114
  2012   000D0E                     i2u24_40:
  2013   000D0E                     
  2014                           ;uart.c: 67: char temp = RCREG;
  2015   000D0E  CFAE F001          	movff	4014,UART_Interrupt@temp	;volatile
  2016   000D12                     
  2017                           ;uart.c: 69: for(unsigned int i = 0; i < 17 - 1; i++) {
  2018   000D12  0E00               	movlw	0
  2019   000D14  6E03               	movwf	(UART_Interrupt@i+1)^0,c
  2020   000D16  0E00               	movlw	0
  2021   000D18  6E02               	movwf	UART_Interrupt@i^0,c
  2022   000D1A                     i2l1231:
  2023                           
  2024                           ;uart.c: 70: UARTBUFF[i] = UARTBUFF[i + 1];
  2025   000D1A  0E29               	movlw	low (_UARTBUFF+1)
  2026   000D1C  2402               	addwf	UART_Interrupt@i^0,w,c
  2027   000D1E  6ED9               	movwf	fsr2l,c
  2028   000D20  0E00               	movlw	high (_UARTBUFF+1)
  2029   000D22  2003               	addwfc	(UART_Interrupt@i+1)^0,w,c
  2030   000D24  6EDA               	movwf	fsr2h,c
  2031   000D26  0E28               	movlw	low _UARTBUFF
  2032   000D28  2402               	addwf	UART_Interrupt@i^0,w,c
  2033   000D2A  6EE1               	movwf	fsr1l,c
  2034   000D2C  0E00               	movlw	high _UARTBUFF
  2035   000D2E  2003               	addwfc	(UART_Interrupt@i+1)^0,w,c
  2036   000D30  6EE2               	movwf	fsr1h,c
  2037   000D32  CFDF FFE7          	movff	indf2,indf1
  2038   000D36  4A02               	infsnz	UART_Interrupt@i^0,f,c
  2039   000D38  2A03               	incf	(UART_Interrupt@i+1)^0,f,c
  2040   000D3A  5003               	movf	(UART_Interrupt@i+1)^0,w,c
  2041   000D3C  E109               	bnz	i2u25_40
  2042   000D3E  0E10               	movlw	16
  2043   000D40  5C02               	subwf	UART_Interrupt@i^0,w,c
  2044   000D42  A0D8               	btfss	status,0,c
  2045   000D44  EFA6  F006         	goto	i2u25_41
  2046   000D48  EFA8  F006         	goto	i2u25_40
  2047   000D4C                     i2u25_41:
  2048   000D4C  EF8D  F006         	goto	i2l1231
  2049   000D50                     i2u25_40:
  2050   000D50                     
  2051                           ;uart.c: 71: };uart.c: 72: UARTBUFF[17 - 2] = temp;
  2052   000D50  C001  F037         	movff	UART_Interrupt@temp,_UARTBUFF+15
  2053   000D54                     
  2054                           ;uart.c: 73: UARTBUFF[17 - 1] = '\0';
  2055   000D54  0E00               	movlw	0
  2056   000D56  6E38               	movwf	(_UARTBUFF+16)^0,c
  2057   000D58                     
  2058                           ;uart.c: 74: RCIF = 0;
  2059   000D58  9A9E               	bcf	3998,5,c	;volatile
  2060   000D5A                     i2l114:
  2061   000D5A  0012               	return		;funcret
  2062   000D5C                     __end_of_UART_Interrupt:
  2063                           	callstack 0
  2064                           
  2065                           	psect	rparam
  2066   000000                     
  2067                           	psect	temp
  2068   000039                     btemp:
  2069                           	callstack 0
  2070   000039                     	ds	1
  2071   000000                     int$flags	set	btemp
  2072   000000                     wtemp8	set	btemp+1
  2073   000000                     ttemp5	set	btemp+1
  2074   000000                     ttemp6	set	btemp+4
  2075   000000                     ttemp7	set	btemp+8
  2076                           
  2077                           	psect	config
  2078                           
  2079                           ;Config register CONFIG1L @ 0x300000
  2080                           ;	PLL Prescaler Selection bits
  2081                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  2082                           ;	System Clock Postscaler Selection bits
  2083                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2084                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2085                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2086   300000                     	org	3145728
  2087   300000  04                 	db	4
  2088                           
  2089                           ;Config register CONFIG1H @ 0x300001
  2090                           ;	Oscillator Selection bits
  2091                           ;	FOSC = HS, HS oscillator (HS)
  2092                           ;	Fail-Safe Clock Monitor Enable bit
  2093                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2094                           ;	Internal/External Oscillator Switchover bit
  2095                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2096   300001                     	org	3145729
  2097   300001  0C                 	db	12
  2098                           
  2099                           ;Config register CONFIG2L @ 0x300002
  2100                           ;	Power-up Timer Enable bit
  2101                           ;	PWRT = OFF, PWRT disabled
  2102                           ;	Brown-out Reset Enable bits
  2103                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2104                           ;	Brown-out Reset Voltage bits
  2105                           ;	BORV = 3, Minimum setting 2.05V
  2106                           ;	USB Voltage Regulator Enable bit
  2107                           ;	VREGEN = OFF, USB voltage regulator disabled
  2108   300002                     	org	3145730
  2109   300002  1F                 	db	31
  2110                           
  2111                           ;Config register CONFIG2H @ 0x300003
  2112                           ;	Watchdog Timer Enable bit
  2113                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2114                           ;	Watchdog Timer Postscale Select bits
  2115                           ;	WDTPS = 32768, 1:32768
  2116   300003                     	org	3145731
  2117   300003  1E                 	db	30
  2118                           
  2119                           ; Padding undefined space
  2120   300004                     	org	3145732
  2121   300004  FF                 	db	255
  2122                           
  2123                           ;Config register CONFIG3H @ 0x300005
  2124                           ;	CCP2 MUX bit
  2125                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2126                           ;	PORTB A/D Enable bit
  2127                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2128                           ;	Low-Power Timer 1 Oscillator Enable bit
  2129                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2130                           ;	MCLR Pin Enable bit
  2131                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2132   300005                     	org	3145733
  2133   300005  83                 	db	131
  2134                           
  2135                           ;Config register CONFIG4L @ 0x300006
  2136                           ;	Stack Full/Underflow Reset Enable bit
  2137                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2138                           ;	Single-Supply ICSP Enable bit
  2139                           ;	LVP = OFF, Single-Supply ICSP disabled
  2140                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2141                           ;	ICPRT = OFF, ICPORT disabled
  2142                           ;	Extended Instruction Set Enable bit
  2143                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2144                           ;	Background Debugger Enable bit
  2145                           ;	DEBUG = 0x1, unprogrammed default
  2146   300006                     	org	3145734
  2147   300006  81                 	db	129
  2148                           
  2149                           ; Padding undefined space
  2150   300007                     	org	3145735
  2151   300007  FF                 	db	255
  2152                           
  2153                           ;Config register CONFIG5L @ 0x300008
  2154                           ;	Code Protection bit
  2155                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2156                           ;	Code Protection bit
  2157                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2158                           ;	Code Protection bit
  2159                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2160                           ;	Code Protection bit
  2161                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2162   300008                     	org	3145736
  2163   300008  0F                 	db	15
  2164                           
  2165                           ;Config register CONFIG5H @ 0x300009
  2166                           ;	Boot Block Code Protection bit
  2167                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2168                           ;	Data EEPROM Code Protection bit
  2169                           ;	CPD = OFF, Data EEPROM is not code-protected
  2170   300009                     	org	3145737
  2171   300009  C0                 	db	192
  2172                           
  2173                           ;Config register CONFIG6L @ 0x30000A
  2174                           ;	Write Protection bit
  2175                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2176                           ;	Write Protection bit
  2177                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2178                           ;	Write Protection bit
  2179                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2180                           ;	Write Protection bit
  2181                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2182   30000A                     	org	3145738
  2183   30000A  0F                 	db	15
  2184                           
  2185                           ;Config register CONFIG6H @ 0x30000B
  2186                           ;	Configuration Register Write Protection bit
  2187                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2188                           ;	Boot Block Write Protection bit
  2189                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2190                           ;	Data EEPROM Write Protection bit
  2191                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2192   30000B                     	org	3145739
  2193   30000B  E0                 	db	224
  2194                           
  2195                           ;Config register CONFIG7L @ 0x30000C
  2196                           ;	Table Read Protection bit
  2197                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2198                           ;	Table Read Protection bit
  2199                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2200                           ;	Table Read Protection bit
  2201                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2202                           ;	Table Read Protection bit
  2203                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2204   30000C                     	org	3145740
  2205   30000C  0F                 	db	15
  2206                           
  2207                           ;Config register CONFIG7H @ 0x30000D
  2208                           ;	Boot Block Table Read Protection bit
  2209                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2210   30000D                     	org	3145741
  2211   30000D  40                 	db	64
  2212                           tosu	equ	0xFFF
  2213                           tosh	equ	0xFFE
  2214                           tosl	equ	0xFFD
  2215                           stkptr	equ	0xFFC
  2216                           pclatu	equ	0xFFB
  2217                           pclath	equ	0xFFA
  2218                           pcl	equ	0xFF9
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           indf0	equ	0xFEF
  2226                           postinc0	equ	0xFEE
  2227                           postdec0	equ	0xFED
  2228                           preinc0	equ	0xFEC
  2229                           plusw0	equ	0xFEB
  2230                           fsr0h	equ	0xFEA
  2231                           fsr0l	equ	0xFE9
  2232                           wreg	equ	0xFE8
  2233                           indf1	equ	0xFE7
  2234                           postinc1	equ	0xFE6
  2235                           postdec1	equ	0xFE5
  2236                           preinc1	equ	0xFE4
  2237                           plusw1	equ	0xFE3
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           bsr	equ	0xFE0
  2241                           indf2	equ	0xFDF
  2242                           postinc2	equ	0xFDE
  2243                           postdec2	equ	0xFDD
  2244                           preinc2	equ	0xFDC
  2245                           plusw2	equ	0xFDB
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    8
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[11]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[11]), 

    UART_Write_Text_ln@txt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    UART_Write_Text@txt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _setup->_UART_Init
    _UART_Init->___aldiv
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_delay_ms
    _LCD_Init->_LCD_Command
    _LCD_Command->_delay_ms
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Interrupt in COMRAM

    _Interrupt->_UART_Interrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4905
                                             35 COMRAM     4     4      0
                 _UART_Write_Text_ln
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4608
                           _ADC_Init
                           _LCD_Init
                      _LCD_String_xy
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           14    10      4     836
                                             21 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              7 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    2250
                                             18 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     921
                                             16 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0     800
                                             13 COMRAM     3     3      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1424
                        _LCD_Command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0     800
                                             13 COMRAM     3     3      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             6     4      2     624
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     1      2      98
                                              7 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text_ln                                   2     0      2     294
                                             14 COMRAM     2     0      2
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     181
                                              8 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt                                            4     4      0      75
                                              3 COMRAM     4     4      0
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (7) _UART_Interrupt                                       3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write_Text_ln
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _setup
     _ADC_Init
     _LCD_Init
       _LCD_Command
         _delay_ms
       _delay_ms
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
           _delay_ms
     _UART_Init
       ___aldiv

 _Interrupt (ROOT)
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      38       1       59.6%
BITBIGSFRll         2C      0       0      29        0.0%
BITBIGSFRhlhhhh     28      0       0      21        0.0%
BITBIGSFRhlhhhl     10      0       0      24        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhlhll       7      0       0      26        0.0%
BITBIGSFRhll         7      0       0      27        0.0%
BITBIGSFRlh          5      0       0      28        0.0%
BITBIGSFRhlhhhh      1      0       0      22        0.0%
BITBIGSFRhlhlhh      1      0       0      25        0.0%
BITBIGSFRhlhhhh      1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      30        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 19 19:56:42 2023

              ?_LCD_Command 0001                 _SSPSTATbits 0FC7                          l31 0E4C  
                        l53 0E02                          l81 0F80                          l84 0F92  
                        l93 0DB0                          l78 0948                          l96 0F7C  
                        u60 0F8E                          u61 0F8A                 ?_LCD_String 0011  
                       l212 0B78                         l215 0E84                         l233 0EBA  
                       l218 0A60                         l242 0CFE                         l165 0F62  
                       l363 0C84                         u510 0E32                         u511 0E2E  
                       u520 0E4C                         u600 0B8C                         u521 0E48  
                       u601 0B88                         u610 0BAE                         u611 0BAA  
                       u620 0BE8                         u621 0BE4                         u630 0C0A  
                       u710 0938                         u535 096E                         u631 0C06  
                       u711 0934                         u720 0DB0                         u640 0C32  
                       u721 0DAC                         u545 0992                         u641 0C2E  
                       u705 08FA                         u650 0C64                         u555 09B8  
                       u651 0C60                         u565 0A86                         u590 0EBA  
                       u575 0AAA                         u591 0EB6                         u680 08AE  
                       u585 0AD0                         u681 08AA                         u665 0838  
                       u675 0872                         u695 08C0                         wreg 0FE8  
               LCD_Char@dat 0010                        l1081 0F8E                        l1079 0F80  
                      l1503 0E18                        l1511 094C                        l1505 0E1C  
                      l1521 09D2                        l1513 09CA                        l1601 0C14  
                      l1507 0E32                        l1531 0A4E                        l1523 09DE  
                      l1515 09CC                        l1603 0C32                        l1611 0C54  
                      l1509 0E36                        l1541 0AE2                        l1533 0A50  
                      l1525 09F2                        l1517 09CE                        l1613 0C64  
                      l1605 0C42                        l1621 089E                        l1701 0F28  
                      l1631 0F3C                        l1551 0AF6                        l1543 0AE4  
                      l1535 0A52                        l1527 0A0C                        l1519 09D0  
                      l1615 0C74                        l1607 0C44                        l1623 08AE  
                      l1633 0F40                        l1561 0B68                        l1553 0B0A  
                      l1545 0AE6                        l1641 0E4E                        l1537 0A54  
                      l1529 0A2C                        l1609 0C4E                        l1625 0926  
                      l1635 0F50                        l1563 0B6A                        l1555 0B24  
                      l1547 0AE8                        l1539 0A64                        l1643 0E5A  
                      l1571 0E9A                        l1651 0C9C                        l1627 0928  
                      l1619 0826                        l1637 0F52                        l1565 0B6C  
                      l1557 0B44                        l1549 0AEA                        l1573 0E9E  
                      l1661 0CC2                        l1653 0CA2                        l1645 0C88  
                      l1581 0B9C                        l1629 0938                        l1671 0D68  
                      l1639 0F5A                        l1495 0E04                        l1559 0B66  
                      l1567 0E86                        l1655 0CAC                        l1647 0C8C  
                      l1591 0BD2                        l1583 0BA0                        l1575 0B7A  
                      l1673 0D84                        l1497 0E10                        l1569 0E8A  
                      l1657 0CB2                        l1649 0C92                        l1665 0CCC  
                      l1593 0BE8                        l1585 0BAE                        l1577 0B7E  
                      l1681 0DD8                        l1675 0D88                        l1691 0F64  
                      l1659 0CBC                        l1667 0CF2                        l1595 0BF0  
                      l1587 0BBE                        l1579 0B8C                        l1683 0DEA  
                      l1669 0D5C                        l1693 0F70                        l1597 0BFC  
                      l1589 0BC2                        l1685 0DFC                        l1677 0DB2  
                      l1695 0F76                        l1599 0C0A                        l1687 0DFE  
                      l1679 0DB4                        l1689 0E00                        l1697 0F14  
                      l1699 0F24                        STR_1 081F                        STR_2 0809  
                      STR_3 0814                        _BRGH 7D62                        _RCIF 7CF5  
                      i2l15 0F00                        _main 0F14                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        btemp 0039  
          __end_of_ADC_Init 0F64                        start 000E               _LCD_String_xy 0C86  
              ___param_bank 0000     __end_of_UART_Write_Text 0DB2            __end_of_LCD_Char 0A62  
          __end_of_LCD_Init 0E86             __end_of___aldiv 0C86                       ?_main 0001  
                     _ADRES 0FC3                       _EEADR 0FA9                       i2l113 0D50  
                     i2l114 0D5A                       _RCREG 0FAE                       _SPBRG 0FAF  
                     _TXREG 0FAD                 ?_UART_Write 0001                       _setup 0DB2  
                     tablat 0FF5                       ttemp5 003A                       ttemp6 003D  
                     ttemp7 0041                       status 0FD8                       wtemp8 003A  
            ?_LCD_String_xy 0013             __initialization 0EBC                __end_of_main 0F3C  
        UART_Interrupt@temp 0001                      ??_main 0024               __activetblptr 0002  
                    _EEDATA 0FA8                      _EECON2 0FA7                      ?_setup 0001  
          LCD_String_xy@msg 0014            LCD_String_xy@pos 0013            LCD_String_xy@row 0016  
                    i2l1221 0D00                      i2l1231 0D1A                      i2l1223 0D0E  
                    i2l1233 0D36                      i2l1225 0D12                      i2l1235 0D3A  
                    i2l1237 0D54                      i2l1239 0D58                      i2l1299 0EFC  
             main@localAddr 0024                      _SSPBUF 0FC9            __end_of_delay_ms 0E4E  
           ADC_Init@channel 0008        delay_ms@milliseconds 0008           __end_of_UART_Init 094A  
                 ??___aldiv 0010            ?_UART_Write_Text 0009                      isa$std 0001  
              __pdataCOMRAM 0028                   ?_ADC_Init 0008                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                 ?_LCD_Char 0001                  __accesstop 0060     __end_of__initialization 0EDC  
                 ?_LCD_Init 0001             ??_LCD_String_xy 0016               ___rparam_used 0001  
            __pcstackCOMRAM 0001               __end_of_setup 0E04                ??_LCD_String 0013  
                ??_ADC_Init 000A           __end_of_Interrupt 0F14                     ??_setup 0024  
                ??_LCD_Char 000E                  ??_LCD_Init 0011          __end_of_LCD_String 0EBC  
__end_of_UART_Write_Text_ln 0F7E                   ?_delay_ms 0008                ??_UART_Write 0008  
                   i2u24_40 0D0E                     i2u24_41 0D0A                     i2u25_40 0D50  
                   i2u25_41 0D4C                     _SSPCON1 0FC6                     _SSPSTAT 0FC7  
             LCD_String@msg 0011                     __Hparam 0000                     __Lparam 0000  
                   ___aldiv 0B7A          __end_of_UART_Write 0F94                __psmallconst 0800  
                   __pcinit 0EBC                     __ramtop 0800                     __ptext0 0F14  
                   __ptext1 0DB2                     __ptext2 0826                     __ptext3 0B7A  
                   __ptext4 0C86                     __ptext5 0E86                     __ptext6 094A  
                   __ptext7 0E4E                     __ptext8 0A62                     __ptext9 0E04  
            _UART_Interrupt 0D00            ___aldiv@dividend 0008                  ??_delay_ms 000A  
     UART_Write_Text_ln@txt 000F              __pintcode_body 0EEA        end_of_initialization 0EDC  
            LCD_Command@cmd 0010               __Lmediumconst 0000                     int_func 0EEA  
                 _RCSTAbits 0FAB            ___aldiv@quotient 0012                     postdec1 0FE5  
                   postinc0 0FEE      __end_of_UART_Interrupt 0D5C                   _UART_Init 0826  
            UART_Write@data 0008                  main@FNSTAT 0026                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                 _TXSTAbits 0FAC               ??_LCD_Command 000E             ?_UART_Interrupt 0001  
                ?_UART_Init 0016               __pidataCOMRAM 0F94         start_initialization 0EBC  
                 _Interrupt 0008       __end_of_LCD_String_xy 0D00         __end_of_LCD_Command 0B7A  
        _UART_Write_Text_ln 0F64                  ?_Interrupt 0001         ?_UART_Write_Text_ln 000F  
                 __pintcode 0008                    ?___aldiv 0008                 ??_UART_Init 001A  
               __smallconst 0800        ??_UART_Write_Text_ln 0011                    _ADC_Init 0F3C  
     LCD_String_xy@location 0017                  UART_Init@x 0022           ??_UART_Write_Text 000B  
           ___aldiv@divisor 000C                    _LCD_Char 094A             ___aldiv@counter 0010  
                  _LCD_Init 0E4E                    _LATDbits 0F8C                   delay_ms@i 000A  
                 delay_ms@j 000C                    _PIE1bits 0F9D                    _UARTBUFF 0028  
               _LCD_Command 0A62           UART_Init@baudrate 0016         __end_of_modbusQuery 0809  
                _ADCON0bits 0FC2                  _ADCON1bits 0FC1                  _ADCON2bits 0FC0  
           UART_Interrupt@i 0002                   copy_data0 0ED0                 ??_Interrupt 0004  
                _EECON1bits 0FA6                    __Hrparam 0000            ??_UART_Interrupt 0001  
                  __Lrparam 0000                    _delay_ms 0E04                    __ptext10 0F3C  
                  __ptext11 0F64                    __ptext12 0D5C                    __ptext13 0F7E  
                  __ptext15 0D00                 _modbusQuery 0801                    isa$xinst 0000  
                  int$flags 0039                  _LCD_String 0E86                  _INTCONbits 0FF2  
                  intlevel2 0000          UART_Write_Text@txt 0009             _UART_Write_Text 0D5C  
              ___aldiv@sign 0011                  _UART_Write 0F7E            UART_Write_Text@i 000D  
